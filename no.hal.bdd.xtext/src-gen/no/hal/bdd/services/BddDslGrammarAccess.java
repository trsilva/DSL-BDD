/*
 * generated by Xtext 2.25.0
 */
package no.hal.bdd.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BddDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cModelRefsAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cModelRefsModelRefParserRuleCall_1_0_0 = (RuleCall)cModelRefsAssignment_1_0.eContents().get(0);
		private final Assignment cEntityDefsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cEntityDefsEntityDefParserRuleCall_1_1_0 = (RuleCall)cEntityDefsAssignment_1_1.eContents().get(0);
		private final Assignment cScenariosAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cScenariosScenarioParserRuleCall_1_2_0 = (RuleCall)cScenariosAssignment_1_2.eContents().get(0);
		
		//Model:
		//    ('model' name = ID)
		//    (
		//        (modelRefs += ModelRef) |
		//        (entityDefs += EntityDef) |
		//        (scenarios += Scenario)
		//    )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('model' name = ID)
		//(
		//    (modelRefs += ModelRef) |
		//    (entityDefs += EntityDef) |
		//    (scenarios += Scenario)
		//)*
		public Group getGroup() { return cGroup; }
		
		//('model' name = ID)
		public Group getGroup_0() { return cGroup_0; }
		
		//'model'
		public Keyword getModelKeyword_0_0() { return cModelKeyword_0_0; }
		
		//name = ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//(
		//    (modelRefs += ModelRef) |
		//    (entityDefs += EntityDef) |
		//    (scenarios += Scenario)
		//)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(modelRefs += ModelRef)
		public Assignment getModelRefsAssignment_1_0() { return cModelRefsAssignment_1_0; }
		
		//ModelRef
		public RuleCall getModelRefsModelRefParserRuleCall_1_0_0() { return cModelRefsModelRefParserRuleCall_1_0_0; }
		
		//(entityDefs += EntityDef)
		public Assignment getEntityDefsAssignment_1_1() { return cEntityDefsAssignment_1_1; }
		
		//EntityDef
		public RuleCall getEntityDefsEntityDefParserRuleCall_1_1_0() { return cEntityDefsEntityDefParserRuleCall_1_1_0; }
		
		//(scenarios += Scenario)
		public Assignment getScenariosAssignment_1_2() { return cScenariosAssignment_1_2; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_1_2_0() { return cScenariosScenarioParserRuleCall_1_2_0; }
	}
	public class ModelRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ModelRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUsingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cModelRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cModelRefModelCrossReference_1_0 = (CrossReference)cModelRefAssignment_1.eContents().get(0);
		private final RuleCall cModelRefModelIDTerminalRuleCall_1_0_1 = (RuleCall)cModelRefModelCrossReference_1_0.eContents().get(1);
		
		//ModelRef:
		//    'using' modelRef = [Model]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'using' modelRef = [Model]
		public Group getGroup() { return cGroup; }
		
		//'using'
		public Keyword getUsingKeyword_0() { return cUsingKeyword_0; }
		
		//modelRef = [Model]
		public Assignment getModelRefAssignment_1() { return cModelRefAssignment_1; }
		
		//[Model]
		public CrossReference getModelRefModelCrossReference_1_0() { return cModelRefModelCrossReference_1_0; }
		
		//ID
		public RuleCall getModelRefModelIDTerminalRuleCall_1_0_1() { return cModelRefModelIDTerminalRuleCall_1_0_1; }
	}
	public class EntityDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.EntityDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperEntitiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperEntitiesEntityDefCrossReference_3_1_0 = (CrossReference)cSuperEntitiesAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperEntitiesEntityDefIDTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperEntitiesEntityDefCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperEntitiesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSuperEntitiesEntityDefCrossReference_3_2_1_0 = (CrossReference)cSuperEntitiesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSuperEntitiesEntityDefIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cSuperEntitiesEntityDefCrossReference_3_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cActionsActionDefParserRuleCall_5_1_0 = (RuleCall)cActionsAssignment_5_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final RuleCall cWORDParserRuleCall_5_3_0 = (RuleCall)cGroup_5_3.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_5_3_1 = (Keyword)cGroup_5_3.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_5_3_2 = (RuleCall)cGroup_5_3.eContents().get(2);
		private final Group cGroup_5_4 = (Group)cGroup_5.eContents().get(4);
		private final Alternatives cAlternatives_5_4_0 = (Alternatives)cGroup_5_4.eContents().get(0);
		private final Keyword cCommaKeyword_5_4_0_0 = (Keyword)cAlternatives_5_4_0.eContents().get(0);
		private final Keyword cAndKeyword_5_4_0_1 = (Keyword)cAlternatives_5_4_0.eContents().get(1);
		private final Keyword cTheKeyword_5_4_0_2 = (Keyword)cAlternatives_5_4_0.eContents().get(2);
		private final Assignment cActionsAssignment_5_4_1 = (Assignment)cGroup_5_4.eContents().get(1);
		private final RuleCall cActionsActionDefParserRuleCall_5_4_1_0 = (RuleCall)cActionsAssignment_5_4_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStatesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStatesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStatesStateDefParserRuleCall_6_1_0 = (RuleCall)cStatesAssignment_6_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_6_2 = (RuleCall)cGroup_6.eContents().get(2);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final RuleCall cWORDParserRuleCall_6_3_0 = (RuleCall)cGroup_6_3.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_6_3_2 = (RuleCall)cGroup_6_3.eContents().get(2);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Alternatives cAlternatives_6_4_0 = (Alternatives)cGroup_6_4.eContents().get(0);
		private final Keyword cCommaKeyword_6_4_0_0 = (Keyword)cAlternatives_6_4_0.eContents().get(0);
		private final Keyword cAndKeyword_6_4_0_1 = (Keyword)cAlternatives_6_4_0.eContents().get(1);
		private final Keyword cTheKeyword_6_4_0_2 = (Keyword)cAlternatives_6_4_0.eContents().get(2);
		private final Assignment cStatesAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cStatesStateDefParserRuleCall_6_4_1_0 = (RuleCall)cStatesAssignment_6_4_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPropertiesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPropertiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPropertiesPropertyDefParserRuleCall_7_1_0 = (RuleCall)cPropertiesAssignment_7_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_7_2 = (RuleCall)cGroup_7.eContents().get(2);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final RuleCall cWORDParserRuleCall_7_3_0 = (RuleCall)cGroup_7_3.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_7_3_1 = (Keyword)cGroup_7_3.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_7_3_2 = (RuleCall)cGroup_7_3.eContents().get(2);
		private final Group cGroup_7_4 = (Group)cGroup_7.eContents().get(4);
		private final Alternatives cAlternatives_7_4_0 = (Alternatives)cGroup_7_4.eContents().get(0);
		private final Keyword cCommaKeyword_7_4_0_0 = (Keyword)cAlternatives_7_4_0.eContents().get(0);
		private final Keyword cAndKeyword_7_4_0_1 = (Keyword)cAlternatives_7_4_0.eContents().get(1);
		private final Keyword cTheKeyword_7_4_0_2 = (Keyword)cAlternatives_7_4_0.eContents().get(2);
		private final Assignment cPropertiesAssignment_7_4_1 = (Assignment)cGroup_7_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyDefParserRuleCall_7_4_1_0 = (RuleCall)cPropertiesAssignment_7_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//EntityDef:
		//    'entity' name = (ID | STRING) ('-'WORD)? ('is' superEntities += [EntityDef] (',' superEntities += [EntityDef])*)? '{'
		//        ('actions:' (actions += ActionDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') actions += ActionDef)*)?
		//        ('states:' (states += StateDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') states += StateDef)*)?
		//        ('properties:' (properties += PropertyDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') properties += PropertyDef)*)?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name = (ID | STRING) ('-'WORD)? ('is' superEntities += [EntityDef] (',' superEntities += [EntityDef])*)? '{'
		//    ('actions:' (actions += ActionDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') actions += ActionDef)*)?
		//    ('states:' (states += StateDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') states += StateDef)*)?
		//    ('properties:' (properties += PropertyDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') properties += PropertyDef)*)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name = (ID | STRING)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//(ID | STRING)
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0_1() { return cNameSTRINGTerminalRuleCall_1_0_1; }
		
		//('-'WORD)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_2_0() { return cHyphenMinusKeyword_2_0; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_2_1() { return cWORDParserRuleCall_2_1; }
		
		//('is' superEntities += [EntityDef] (',' superEntities += [EntityDef])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'is'
		public Keyword getIsKeyword_3_0() { return cIsKeyword_3_0; }
		
		//superEntities += [EntityDef]
		public Assignment getSuperEntitiesAssignment_3_1() { return cSuperEntitiesAssignment_3_1; }
		
		//[EntityDef]
		public CrossReference getSuperEntitiesEntityDefCrossReference_3_1_0() { return cSuperEntitiesEntityDefCrossReference_3_1_0; }
		
		//ID
		public RuleCall getSuperEntitiesEntityDefIDTerminalRuleCall_3_1_0_1() { return cSuperEntitiesEntityDefIDTerminalRuleCall_3_1_0_1; }
		
		//(',' superEntities += [EntityDef])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//superEntities += [EntityDef]
		public Assignment getSuperEntitiesAssignment_3_2_1() { return cSuperEntitiesAssignment_3_2_1; }
		
		//[EntityDef]
		public CrossReference getSuperEntitiesEntityDefCrossReference_3_2_1_0() { return cSuperEntitiesEntityDefCrossReference_3_2_1_0; }
		
		//ID
		public RuleCall getSuperEntitiesEntityDefIDTerminalRuleCall_3_2_1_0_1() { return cSuperEntitiesEntityDefIDTerminalRuleCall_3_2_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('actions:' (actions += ActionDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') actions += ActionDef)*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'actions:'
		public Keyword getActionsKeyword_5_0() { return cActionsKeyword_5_0; }
		
		//(actions += ActionDef)
		public Assignment getActionsAssignment_5_1() { return cActionsAssignment_5_1; }
		
		//ActionDef
		public RuleCall getActionsActionDefParserRuleCall_5_1_0() { return cActionsActionDefParserRuleCall_5_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5_2() { return cWORDParserRuleCall_5_2; }
		
		//(WORD'-'WORD)?
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_5_3_0() { return cWORDParserRuleCall_5_3_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_3_1() { return cHyphenMinusKeyword_5_3_1; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_5_3_2() { return cWORDParserRuleCall_5_3_2; }
		
		//((','|'and'|'the') actions += ActionDef)*
		public Group getGroup_5_4() { return cGroup_5_4; }
		
		//(','|'and'|'the')
		public Alternatives getAlternatives_5_4_0() { return cAlternatives_5_4_0; }
		
		//','
		public Keyword getCommaKeyword_5_4_0_0() { return cCommaKeyword_5_4_0_0; }
		
		//'and'
		public Keyword getAndKeyword_5_4_0_1() { return cAndKeyword_5_4_0_1; }
		
		//'the'
		public Keyword getTheKeyword_5_4_0_2() { return cTheKeyword_5_4_0_2; }
		
		//actions += ActionDef
		public Assignment getActionsAssignment_5_4_1() { return cActionsAssignment_5_4_1; }
		
		//ActionDef
		public RuleCall getActionsActionDefParserRuleCall_5_4_1_0() { return cActionsActionDefParserRuleCall_5_4_1_0; }
		
		//('states:' (states += StateDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') states += StateDef)*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'states:'
		public Keyword getStatesKeyword_6_0() { return cStatesKeyword_6_0; }
		
		//(states += StateDef)
		public Assignment getStatesAssignment_6_1() { return cStatesAssignment_6_1; }
		
		//StateDef
		public RuleCall getStatesStateDefParserRuleCall_6_1_0() { return cStatesStateDefParserRuleCall_6_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_6_2() { return cWORDParserRuleCall_6_2; }
		
		//(WORD'-'WORD)?
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_6_3_0() { return cWORDParserRuleCall_6_3_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_6_3_1() { return cHyphenMinusKeyword_6_3_1; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_6_3_2() { return cWORDParserRuleCall_6_3_2; }
		
		//((','|'and'|'the') states += StateDef)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//(','|'and'|'the')
		public Alternatives getAlternatives_6_4_0() { return cAlternatives_6_4_0; }
		
		//','
		public Keyword getCommaKeyword_6_4_0_0() { return cCommaKeyword_6_4_0_0; }
		
		//'and'
		public Keyword getAndKeyword_6_4_0_1() { return cAndKeyword_6_4_0_1; }
		
		//'the'
		public Keyword getTheKeyword_6_4_0_2() { return cTheKeyword_6_4_0_2; }
		
		//states += StateDef
		public Assignment getStatesAssignment_6_4_1() { return cStatesAssignment_6_4_1; }
		
		//StateDef
		public RuleCall getStatesStateDefParserRuleCall_6_4_1_0() { return cStatesStateDefParserRuleCall_6_4_1_0; }
		
		//('properties:' (properties += PropertyDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') properties += PropertyDef)*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_7_0() { return cPropertiesKeyword_7_0; }
		
		//(properties += PropertyDef)
		public Assignment getPropertiesAssignment_7_1() { return cPropertiesAssignment_7_1; }
		
		//PropertyDef
		public RuleCall getPropertiesPropertyDefParserRuleCall_7_1_0() { return cPropertiesPropertyDefParserRuleCall_7_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_7_2() { return cWORDParserRuleCall_7_2; }
		
		//(WORD'-'WORD)?
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_7_3_0() { return cWORDParserRuleCall_7_3_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_7_3_1() { return cHyphenMinusKeyword_7_3_1; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_7_3_2() { return cWORDParserRuleCall_7_3_2; }
		
		//((','|'and'|'the') properties += PropertyDef)*
		public Group getGroup_7_4() { return cGroup_7_4; }
		
		//(','|'and'|'the')
		public Alternatives getAlternatives_7_4_0() { return cAlternatives_7_4_0; }
		
		//','
		public Keyword getCommaKeyword_7_4_0_0() { return cCommaKeyword_7_4_0_0; }
		
		//'and'
		public Keyword getAndKeyword_7_4_0_1() { return cAndKeyword_7_4_0_1; }
		
		//'the'
		public Keyword getTheKeyword_7_4_0_2() { return cTheKeyword_7_4_0_2; }
		
		//properties += PropertyDef
		public Assignment getPropertiesAssignment_7_4_1() { return cPropertiesAssignment_7_4_1; }
		
		//PropertyDef
		public RuleCall getPropertiesPropertyDefParserRuleCall_7_4_1_0() { return cPropertiesPropertyDefParserRuleCall_7_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ActionDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ActionDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameWORDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAndKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cTheKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cArgumentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArgumentWORDParserRuleCall_3_0 = (RuleCall)cArgumentAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cPrepositionAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cPrepositionPREPParserRuleCall_4_0_0 = (RuleCall)cPrepositionAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cOptionalPrefAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final Keyword cOptionalPrefLeftSquareBracketKeyword_4_1_0_0 = (Keyword)cOptionalPrefAssignment_4_1_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cGroup_4_1.eContents().get(1);
		private final Assignment cPrepositionAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cPrepositionPREPParserRuleCall_4_1_1_0_0 = (RuleCall)cPrepositionAssignment_4_1_1_0.eContents().get(0);
		private final Keyword cOutKeyword_4_1_1_1 = (Keyword)cAlternatives_4_1_1.eContents().get(1);
		private final Keyword cOffKeyword_4_1_1_2 = (Keyword)cAlternatives_4_1_1.eContents().get(2);
		private final Group cGroup_4_1_1_3 = (Group)cAlternatives_4_1_1.eContents().get(3);
		private final Keyword cOnKeyword_4_1_1_3_0 = (Keyword)cGroup_4_1_1_3.eContents().get(0);
		private final Keyword cTheKeyword_4_1_1_3_1 = (Keyword)cGroup_4_1_1_3.eContents().get(1);
		private final Keyword cRowKeyword_4_1_1_3_2 = (Keyword)cGroup_4_1_1_3.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		
		//ActionDef:
		//    name = WORD ('and'|'the')? (WORD)? (argument = WORD)? ((preposition = PREP)? | (optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?))
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = WORD ('and'|'the')? (WORD)? (argument = WORD)? ((preposition = PREP)? | (optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?))
		public Group getGroup() { return cGroup; }
		
		//name = WORD
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//WORD
		public RuleCall getNameWORDParserRuleCall_0_0() { return cNameWORDParserRuleCall_0_0; }
		
		//('and'|'the')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'and'
		public Keyword getAndKeyword_1_0() { return cAndKeyword_1_0; }
		
		//'the'
		public Keyword getTheKeyword_1_1() { return cTheKeyword_1_1; }
		
		//(WORD)?
		public RuleCall getWORDParserRuleCall_2() { return cWORDParserRuleCall_2; }
		
		//(argument = WORD)?
		public Assignment getArgumentAssignment_3() { return cArgumentAssignment_3; }
		
		//WORD
		public RuleCall getArgumentWORDParserRuleCall_3_0() { return cArgumentWORDParserRuleCall_3_0; }
		
		//((preposition = PREP)? | (optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?))
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//(preposition = PREP)?
		public Assignment getPrepositionAssignment_4_0() { return cPrepositionAssignment_4_0; }
		
		//PREP
		public RuleCall getPrepositionPREPParserRuleCall_4_0_0() { return cPrepositionPREPParserRuleCall_4_0_0; }
		
		//(optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?)
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//optionalPref ?= '['?
		public Assignment getOptionalPrefAssignment_4_1_0() { return cOptionalPrefAssignment_4_1_0; }
		
		//'['
		public Keyword getOptionalPrefLeftSquareBracketKeyword_4_1_0_0() { return cOptionalPrefLeftSquareBracketKeyword_4_1_0_0; }
		
		//(preposition = PREP|'out'|'off'|'on' 'the' 'row')
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }
		
		//preposition = PREP
		public Assignment getPrepositionAssignment_4_1_1_0() { return cPrepositionAssignment_4_1_1_0; }
		
		//PREP
		public RuleCall getPrepositionPREPParserRuleCall_4_1_1_0_0() { return cPrepositionPREPParserRuleCall_4_1_1_0_0; }
		
		//'out'
		public Keyword getOutKeyword_4_1_1_1() { return cOutKeyword_4_1_1_1; }
		
		//'off'
		public Keyword getOffKeyword_4_1_1_2() { return cOffKeyword_4_1_1_2; }
		
		//'on' 'the' 'row'
		public Group getGroup_4_1_1_3() { return cGroup_4_1_1_3; }
		
		//'on'
		public Keyword getOnKeyword_4_1_1_3_0() { return cOnKeyword_4_1_1_3_0; }
		
		//'the'
		public Keyword getTheKeyword_4_1_1_3_1() { return cTheKeyword_4_1_1_3_1; }
		
		//'row'
		public Keyword getRowKeyword_4_1_1_3_2() { return cRowKeyword_4_1_1_3_2; }
		
		//']'?
		public Keyword getRightSquareBracketKeyword_4_1_2() { return cRightSquareBracketKeyword_4_1_2; }
	}
	public class PREPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.PREP");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cInKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFromKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cToKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cIntoKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cForKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//PREP: ('on' | 'in' | 'from' | 'to' | 'into'|'for');
		@Override public ParserRule getRule() { return rule; }
		
		//('on' | 'in' | 'from' | 'to' | 'into'|'for')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//'in'
		public Keyword getInKeyword_1() { return cInKeyword_1; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//'into'
		public Keyword getIntoKeyword_4() { return cIntoKeyword_4; }
		
		//'for'
		public Keyword getForKeyword_5() { return cForKeyword_5; }
	}
	public class WORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.WORD");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//WORD: ID;
		@Override public ParserRule getRule() { return rule; }
		
		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}
	public class StateDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.StateDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPostiveAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPostiveStateNameParserRuleCall_0_0 = (RuleCall)cPostiveAssignment_0.eContents().get(0);
		private final RuleCall cPREPParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNegativeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNegativeStateNameParserRuleCall_2_1_0 = (RuleCall)cNegativeAssignment_2_1.eContents().get(0);
		
		//StateDef: postive = StateName PREP? ('/' negative = StateName)?;
		@Override public ParserRule getRule() { return rule; }
		
		//postive = StateName PREP? ('/' negative = StateName)?
		public Group getGroup() { return cGroup; }
		
		//postive = StateName
		public Assignment getPostiveAssignment_0() { return cPostiveAssignment_0; }
		
		//StateName
		public RuleCall getPostiveStateNameParserRuleCall_0_0() { return cPostiveStateNameParserRuleCall_0_0; }
		
		//PREP?
		public RuleCall getPREPParserRuleCall_1() { return cPREPParserRuleCall_1; }
		
		//('/' negative = StateName)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'/'
		public Keyword getSolidusKeyword_2_0() { return cSolidusKeyword_2_0; }
		
		//negative = StateName
		public Assignment getNegativeAssignment_2_1() { return cNegativeAssignment_2_1; }
		
		//StateName
		public RuleCall getNegativeStateNameParserRuleCall_2_1_0() { return cNegativeStateNameParserRuleCall_2_1_0; }
	}
	public class StateNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.StateName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameWORDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAndKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cOffKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StateName: name = (WORD) ('and'|'off')?  (WORD)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name = (WORD) ('and'|'off')?  (WORD)?
		public Group getGroup() { return cGroup; }
		
		//name = (WORD)
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//(WORD)
		public RuleCall getNameWORDParserRuleCall_0_0() { return cNameWORDParserRuleCall_0_0; }
		
		//('and'|'off')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'and'
		public Keyword getAndKeyword_1_0() { return cAndKeyword_1_0; }
		
		//'off'
		public Keyword getOffKeyword_1_1() { return cOffKeyword_1_1; }
		
		//(WORD)?
		public RuleCall getWORDParserRuleCall_2() { return cWORDParserRuleCall_2; }
	}
	public class PropertyDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.PropertyDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameWORDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cPluralAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPluralAsteriskKeyword_1_0 = (Keyword)cPluralAssignment_1.eContents().get(0);
		
		//PropertyDef: name = WORD (plural ?= '*')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name = WORD (plural ?= '*')?
		public Group getGroup() { return cGroup; }
		
		//name = WORD
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//WORD
		public RuleCall getNameWORDParserRuleCall_0_0() { return cNameWORDParserRuleCall_0_0; }
		
		//(plural ?= '*')?
		public Assignment getPluralAssignment_1() { return cPluralAssignment_1; }
		
		//'*'
		public Keyword getPluralAsteriskKeyword_1_0() { return cPluralAsteriskKeyword_1_0; }
	}
	public class ID_OR_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ID_OR_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////
		//ID_OR_STRING: (ID | STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//(ID | STRING)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameID_OR_STRINGParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cOutKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cOffKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Keyword cOnKeyword_3_2 = (Keyword)cAlternatives_3.eContents().get(2);
		private final Keyword cInKeyword_3_3 = (Keyword)cAlternatives_3.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_3_4 = (Keyword)cAlternatives_3.eContents().get(4);
		private final Keyword cTheKeyword_3_5 = (Keyword)cAlternatives_3.eContents().get(5);
		private final Group cGroup_3_6 = (Group)cAlternatives_3.eContents().get(6);
		private final Keyword cToKeyword_3_6_0 = (Keyword)cGroup_3_6.eContents().get(0);
		private final Keyword cTheKeyword_3_6_1 = (Keyword)cGroup_3_6.eContents().get(1);
		private final Keyword cToKeyword_3_7 = (Keyword)cAlternatives_3.eContents().get(7);
		private final RuleCall cWORDParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Keyword cOffKeyword_5_0 = (Keyword)cAlternatives_5.eContents().get(0);
		private final Keyword cOnKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Keyword cInKeyword_5_2 = (Keyword)cAlternatives_5.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_5_3 = (Keyword)cAlternatives_5.eContents().get(3);
		private final Keyword cTheKeyword_5_4 = (Keyword)cAlternatives_5.eContents().get(4);
		private final RuleCall cWORDParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Keyword cOnKeyword_7_0 = (Keyword)cAlternatives_7.eContents().get(0);
		private final Keyword cInKeyword_7_1 = (Keyword)cAlternatives_7.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_7_2 = (Keyword)cAlternatives_7.eContents().get(2);
		private final Keyword cTheKeyword_7_3 = (Keyword)cAlternatives_7.eContents().get(3);
		private final RuleCall cWORDParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Keyword cInKeyword_9_0 = (Keyword)cAlternatives_9.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_9_1 = (Keyword)cAlternatives_9.eContents().get(1);
		private final Keyword cTheKeyword_9_2 = (Keyword)cAlternatives_9.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Group cGroup_11_0 = (Group)cGroup_11.eContents().get(0);
		private final Alternatives cAlternatives_11_0_0 = (Alternatives)cGroup_11_0.eContents().get(0);
		private final Group cGroup_11_0_0_0 = (Group)cAlternatives_11_0_0.eContents().get(0);
		private final Alternatives cAlternatives_11_0_0_0_0 = (Alternatives)cGroup_11_0_0_0.eContents().get(0);
		private final Group cGroup_11_0_0_0_0_0 = (Group)cAlternatives_11_0_0_0_0.eContents().get(0);
		private final Keyword cGivenKeyword_11_0_0_0_0_0_0 = (Keyword)cGroup_11_0_0_0_0_0.eContents().get(0);
		private final Keyword cTheKeyword_11_0_0_0_0_0_1 = (Keyword)cGroup_11_0_0_0_0_0.eContents().get(1);
		private final Group cGroup_11_0_0_0_0_1 = (Group)cAlternatives_11_0_0_0_0.eContents().get(1);
		private final Keyword cGivenKeyword_11_0_0_0_0_1_0 = (Keyword)cGroup_11_0_0_0_0_1.eContents().get(0);
		private final Keyword cIKeyword_11_0_0_0_0_1_1 = (Keyword)cGroup_11_0_0_0_0_1.eContents().get(1);
		private final Keyword cGivenKeyword_11_0_0_0_0_2 = (Keyword)cAlternatives_11_0_0_0_0.eContents().get(2);
		private final Group cGroup_11_0_0_0_1 = (Group)cGroup_11_0_0_0.eContents().get(1);
		private final Keyword cDoKeyword_11_0_0_0_1_0 = (Keyword)cGroup_11_0_0_0_1.eContents().get(0);
		private final Keyword cNotKeyword_11_0_0_0_1_1 = (Keyword)cGroup_11_0_0_0_1.eContents().get(1);
		private final RuleCall cOPTIONParserRuleCall_11_0_0_0_2 = (RuleCall)cGroup_11_0_0_0.eContents().get(2);
		private final Group cGroup_11_0_0_1 = (Group)cAlternatives_11_0_0.eContents().get(1);
		private final Keyword cGivenKeyword_11_0_0_1_0 = (Keyword)cGroup_11_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_11_0_0_1_1 = (Alternatives)cGroup_11_0_0_1.eContents().get(1);
		private final Keyword cTheKeyword_11_0_0_1_1_0 = (Keyword)cAlternatives_11_0_0_1_1.eContents().get(0);
		private final Group cGroup_11_0_0_1_1_1 = (Group)cAlternatives_11_0_0_1_1.eContents().get(1);
		private final Keyword cAllKeyword_11_0_0_1_1_1_0 = (Keyword)cGroup_11_0_0_1_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_0_0_1_1_1_1 = (Keyword)cGroup_11_0_0_1_1_1.eContents().get(1);
		private final Keyword cIKeyword_11_0_0_1_1_2 = (Keyword)cAlternatives_11_0_0_1_1.eContents().get(2);
		private final Group cGroup_11_0_0_1_2 = (Group)cGroup_11_0_0_1.eContents().get(2);
		private final Keyword cDoKeyword_11_0_0_1_2_0 = (Keyword)cGroup_11_0_0_1_2.eContents().get(0);
		private final Keyword cNotKeyword_11_0_0_1_2_1 = (Keyword)cGroup_11_0_0_1_2.eContents().get(1);
		private final Assignment cPreStateEAssignment_11_0_0_1_3 = (Assignment)cGroup_11_0_0_1.eContents().get(3);
		private final RuleCall cPreStateEScenarioStateParserRuleCall_11_0_0_1_3_0 = (RuleCall)cPreStateEAssignment_11_0_0_1_3.eContents().get(0);
		private final Keyword cWhichKeyword_11_0_1 = (Keyword)cGroup_11_0.eContents().get(1);
		private final Keyword cMeansKeyword_11_0_2 = (Keyword)cGroup_11_0.eContents().get(2);
		private final Group cGroup_11_1 = (Group)cGroup_11.eContents().get(1);
		private final Keyword cGivenKeyword_11_1_0 = (Keyword)cGroup_11_1.eContents().get(0);
		private final Alternatives cAlternatives_11_1_1 = (Alternatives)cGroup_11_1.eContents().get(1);
		private final Keyword cTheKeyword_11_1_1_0 = (Keyword)cAlternatives_11_1_1.eContents().get(0);
		private final Group cGroup_11_1_1_1 = (Group)cAlternatives_11_1_1.eContents().get(1);
		private final Keyword cAllKeyword_11_1_1_1_0 = (Keyword)cGroup_11_1_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_1_1_1_1 = (Keyword)cGroup_11_1_1_1.eContents().get(1);
		private final Assignment cPreStateAssignment_11_1_2 = (Assignment)cGroup_11_1.eContents().get(2);
		private final RuleCall cPreStateScenarioStateParserRuleCall_11_1_2_0 = (RuleCall)cPreStateAssignment_11_1_2.eContents().get(0);
		private final Alternatives cAlternatives_11_1_3 = (Alternatives)cGroup_11_1.eContents().get(3);
		private final Keyword cOutKeyword_11_1_3_0 = (Keyword)cAlternatives_11_1_3.eContents().get(0);
		private final Keyword cOffKeyword_11_1_3_1 = (Keyword)cAlternatives_11_1_3.eContents().get(1);
		private final Keyword cOnKeyword_11_1_3_2 = (Keyword)cAlternatives_11_1_3.eContents().get(2);
		private final Keyword cInKeyword_11_1_3_3 = (Keyword)cAlternatives_11_1_3.eContents().get(3);
		private final Group cGroup_11_1_3_4 = (Group)cAlternatives_11_1_3.eContents().get(4);
		private final Keyword cToKeyword_11_1_3_4_0 = (Keyword)cGroup_11_1_3_4.eContents().get(0);
		private final Keyword cTheKeyword_11_1_3_4_1 = (Keyword)cGroup_11_1_3_4.eContents().get(1);
		private final Keyword cToKeyword_11_1_3_5 = (Keyword)cAlternatives_11_1_3.eContents().get(5);
		private final Alternatives cAlternatives_11_1_4 = (Alternatives)cGroup_11_1.eContents().get(4);
		private final RuleCall cWORDParserRuleCall_11_1_4_0 = (RuleCall)cAlternatives_11_1_4.eContents().get(0);
		private final Group cGroup_11_1_4_1 = (Group)cAlternatives_11_1_4.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_4_1_0 = (RuleCall)cGroup_11_1_4_1.eContents().get(0);
		private final Alternatives cAlternatives_11_1_4_1_1 = (Alternatives)cGroup_11_1_4_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_1_4_1_1_0 = (Keyword)cAlternatives_11_1_4_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_1_4_1_1_1 = (Keyword)cAlternatives_11_1_4_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_4_1_2 = (RuleCall)cGroup_11_1_4_1.eContents().get(2);
		private final Group cGroup_11_1_4_2 = (Group)cAlternatives_11_1_4.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_1_4_2_0 = (RuleCall)cGroup_11_1_4_2.eContents().get(0);
		private final Keyword cInKeyword_11_1_4_2_1 = (Keyword)cGroup_11_1_4_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_4_2_2 = (RuleCall)cGroup_11_1_4_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_1_5 = (RuleCall)cGroup_11_1.eContents().get(5);
		private final Alternatives cAlternatives_11_1_6 = (Alternatives)cGroup_11_1.eContents().get(6);
		private final Group cGroup_11_1_6_0 = (Group)cAlternatives_11_1_6.eContents().get(0);
		private final Keyword cWhenKeyword_11_1_6_0_0 = (Keyword)cGroup_11_1_6_0.eContents().get(0);
		private final Keyword cIKeyword_11_1_6_0_1 = (Keyword)cGroup_11_1_6_0.eContents().get(1);
		private final Group cGroup_11_1_6_1 = (Group)cAlternatives_11_1_6.eContents().get(1);
		private final Keyword cWhenKeyword_11_1_6_1_0 = (Keyword)cGroup_11_1_6_1.eContents().get(0);
		private final Keyword cIKeyword_11_1_6_1_1 = (Keyword)cGroup_11_1_6_1.eContents().get(1);
		private final Keyword cDoKeyword_11_1_6_1_2 = (Keyword)cGroup_11_1_6_1.eContents().get(2);
		private final Keyword cNotKeyword_11_1_6_1_3 = (Keyword)cGroup_11_1_6_1.eContents().get(3);
		private final Group cGroup_11_1_6_2 = (Group)cAlternatives_11_1_6.eContents().get(2);
		private final Keyword cWhenKeyword_11_1_6_2_0 = (Keyword)cGroup_11_1_6_2.eContents().get(0);
		private final Keyword cTheKeyword_11_1_6_2_1 = (Keyword)cGroup_11_1_6_2.eContents().get(1);
		private final Group cGroup_11_1_6_3 = (Group)cAlternatives_11_1_6.eContents().get(3);
		private final Keyword cGivenKeyword_11_1_6_3_0 = (Keyword)cGroup_11_1_6_3.eContents().get(0);
		private final Keyword cIKeyword_11_1_6_3_1 = (Keyword)cGroup_11_1_6_3.eContents().get(1);
		private final Assignment cActionAssignment_11_1_7 = (Assignment)cGroup_11_1.eContents().get(7);
		private final RuleCall cActionScenarioActionParserRuleCall_11_1_7_0 = (RuleCall)cActionAssignment_11_1_7.eContents().get(0);
		private final Keyword cThenKeyword_11_1_8 = (Keyword)cGroup_11_1.eContents().get(8);
		private final Alternatives cAlternatives_11_1_9 = (Alternatives)cGroup_11_1.eContents().get(9);
		private final Keyword cTheKeyword_11_1_9_0 = (Keyword)cAlternatives_11_1_9.eContents().get(0);
		private final Group cGroup_11_1_9_1 = (Group)cAlternatives_11_1_9.eContents().get(1);
		private final Keyword cAllKeyword_11_1_9_1_0 = (Keyword)cGroup_11_1_9_1.eContents().get(0);
		private final Keyword cTheKeyword_11_1_9_1_1 = (Keyword)cGroup_11_1_9_1.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_11_1_10 = (RuleCall)cGroup_11_1.eContents().get(10);
		private final Assignment cPostStateAssignment_11_1_11 = (Assignment)cGroup_11_1.eContents().get(11);
		private final RuleCall cPostStateScenarioStateParserRuleCall_11_1_11_0 = (RuleCall)cPostStateAssignment_11_1_11.eContents().get(0);
		private final Alternatives cAlternatives_11_1_12 = (Alternatives)cGroup_11_1.eContents().get(12);
		private final Keyword cOutKeyword_11_1_12_0 = (Keyword)cAlternatives_11_1_12.eContents().get(0);
		private final Keyword cOffKeyword_11_1_12_1 = (Keyword)cAlternatives_11_1_12.eContents().get(1);
		private final Keyword cOnKeyword_11_1_12_2 = (Keyword)cAlternatives_11_1_12.eContents().get(2);
		private final Keyword cInKeyword_11_1_12_3 = (Keyword)cAlternatives_11_1_12.eContents().get(3);
		private final Group cGroup_11_1_12_4 = (Group)cAlternatives_11_1_12.eContents().get(4);
		private final Keyword cToKeyword_11_1_12_4_0 = (Keyword)cGroup_11_1_12_4.eContents().get(0);
		private final Keyword cTheKeyword_11_1_12_4_1 = (Keyword)cGroup_11_1_12_4.eContents().get(1);
		private final Keyword cToKeyword_11_1_12_5 = (Keyword)cAlternatives_11_1_12.eContents().get(5);
		private final Alternatives cAlternatives_11_1_13 = (Alternatives)cGroup_11_1.eContents().get(13);
		private final RuleCall cWORDParserRuleCall_11_1_13_0 = (RuleCall)cAlternatives_11_1_13.eContents().get(0);
		private final Group cGroup_11_1_13_1 = (Group)cAlternatives_11_1_13.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_13_1_0 = (RuleCall)cGroup_11_1_13_1.eContents().get(0);
		private final Alternatives cAlternatives_11_1_13_1_1 = (Alternatives)cGroup_11_1_13_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_1_13_1_1_0 = (Keyword)cAlternatives_11_1_13_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_1_13_1_1_1 = (Keyword)cAlternatives_11_1_13_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_13_1_2 = (RuleCall)cGroup_11_1_13_1.eContents().get(2);
		private final Group cGroup_11_1_13_2 = (Group)cAlternatives_11_1_13.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_1_13_2_0 = (RuleCall)cGroup_11_1_13_2.eContents().get(0);
		private final Keyword cInKeyword_11_1_13_2_1 = (Keyword)cGroup_11_1_13_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_1_13_2_2 = (RuleCall)cGroup_11_1_13_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_1_14 = (RuleCall)cGroup_11_1.eContents().get(14);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Alternatives cAlternatives_11_2_0 = (Alternatives)cGroup_11_2.eContents().get(0);
		private final Group cGroup_11_2_0_0 = (Group)cAlternatives_11_2_0.eContents().get(0);
		private final Alternatives cAlternatives_11_2_0_0_0 = (Alternatives)cGroup_11_2_0_0.eContents().get(0);
		private final Group cGroup_11_2_0_0_0_0 = (Group)cAlternatives_11_2_0_0_0.eContents().get(0);
		private final Keyword cWhenKeyword_11_2_0_0_0_0_0 = (Keyword)cGroup_11_2_0_0_0_0.eContents().get(0);
		private final Keyword cIKeyword_11_2_0_0_0_0_1 = (Keyword)cGroup_11_2_0_0_0_0.eContents().get(1);
		private final Group cGroup_11_2_0_0_0_1 = (Group)cAlternatives_11_2_0_0_0.eContents().get(1);
		private final Keyword cWhenKeyword_11_2_0_0_0_1_0 = (Keyword)cGroup_11_2_0_0_0_1.eContents().get(0);
		private final Keyword cTheKeyword_11_2_0_0_0_1_1 = (Keyword)cGroup_11_2_0_0_0_1.eContents().get(1);
		private final Keyword cWhenKeyword_11_2_0_0_0_2 = (Keyword)cAlternatives_11_2_0_0_0.eContents().get(2);
		private final Group cGroup_11_2_0_0_0_3 = (Group)cAlternatives_11_2_0_0_0.eContents().get(3);
		private final Keyword cAndKeyword_11_2_0_0_0_3_0 = (Keyword)cGroup_11_2_0_0_0_3.eContents().get(0);
		private final Keyword cIKeyword_11_2_0_0_0_3_1 = (Keyword)cGroup_11_2_0_0_0_3.eContents().get(1);
		private final Group cGroup_11_2_0_0_1 = (Group)cGroup_11_2_0_0.eContents().get(1);
		private final Keyword cDoKeyword_11_2_0_0_1_0 = (Keyword)cGroup_11_2_0_0_1.eContents().get(0);
		private final Keyword cNotKeyword_11_2_0_0_1_1 = (Keyword)cGroup_11_2_0_0_1.eContents().get(1);
		private final RuleCall cOPTIONParserRuleCall_11_2_0_0_2 = (RuleCall)cGroup_11_2_0_0.eContents().get(2);
		private final Group cGroup_11_2_0_1 = (Group)cAlternatives_11_2_0.eContents().get(1);
		private final Alternatives cAlternatives_11_2_0_1_0 = (Alternatives)cGroup_11_2_0_1.eContents().get(0);
		private final Group cGroup_11_2_0_1_0_0 = (Group)cAlternatives_11_2_0_1_0.eContents().get(0);
		private final Keyword cWhenKeyword_11_2_0_1_0_0_0 = (Keyword)cGroup_11_2_0_1_0_0.eContents().get(0);
		private final Keyword cIKeyword_11_2_0_1_0_0_1 = (Keyword)cGroup_11_2_0_1_0_0.eContents().get(1);
		private final Group cGroup_11_2_0_1_0_1 = (Group)cAlternatives_11_2_0_1_0.eContents().get(1);
		private final Keyword cWhenKeyword_11_2_0_1_0_1_0 = (Keyword)cGroup_11_2_0_1_0_1.eContents().get(0);
		private final Keyword cIKeyword_11_2_0_1_0_1_1 = (Keyword)cGroup_11_2_0_1_0_1.eContents().get(1);
		private final Keyword cDoKeyword_11_2_0_1_0_1_2 = (Keyword)cGroup_11_2_0_1_0_1.eContents().get(2);
		private final Keyword cNotKeyword_11_2_0_1_0_1_3 = (Keyword)cGroup_11_2_0_1_0_1.eContents().get(3);
		private final Group cGroup_11_2_0_1_0_2 = (Group)cAlternatives_11_2_0_1_0.eContents().get(2);
		private final Keyword cWhenKeyword_11_2_0_1_0_2_0 = (Keyword)cGroup_11_2_0_1_0_2.eContents().get(0);
		private final Keyword cTheKeyword_11_2_0_1_0_2_1 = (Keyword)cGroup_11_2_0_1_0_2.eContents().get(1);
		private final Group cGroup_11_2_0_1_0_3 = (Group)cAlternatives_11_2_0_1_0.eContents().get(3);
		private final Keyword cGivenKeyword_11_2_0_1_0_3_0 = (Keyword)cGroup_11_2_0_1_0_3.eContents().get(0);
		private final Keyword cIKeyword_11_2_0_1_0_3_1 = (Keyword)cGroup_11_2_0_1_0_3.eContents().get(1);
		private final Assignment cActionEAssignment_11_2_0_1_1 = (Assignment)cGroup_11_2_0_1.eContents().get(1);
		private final RuleCall cActionEScenarioActionParserRuleCall_11_2_0_1_1_0 = (RuleCall)cActionEAssignment_11_2_0_1_1.eContents().get(0);
		private final Keyword cWhichKeyword_11_2_1 = (Keyword)cGroup_11_2.eContents().get(1);
		private final Keyword cMeansKeyword_11_2_2 = (Keyword)cGroup_11_2.eContents().get(2);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cGivenKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Alternatives cAlternatives_11_3_1 = (Alternatives)cGroup_11_3.eContents().get(1);
		private final Keyword cTheKeyword_11_3_1_0 = (Keyword)cAlternatives_11_3_1.eContents().get(0);
		private final Group cGroup_11_3_1_1 = (Group)cAlternatives_11_3_1.eContents().get(1);
		private final Keyword cAllKeyword_11_3_1_1_0 = (Keyword)cGroup_11_3_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_3_1_1_1 = (Keyword)cGroup_11_3_1_1.eContents().get(1);
		private final Assignment cPreState1Assignment_11_3_2 = (Assignment)cGroup_11_3.eContents().get(2);
		private final RuleCall cPreState1ScenarioStateParserRuleCall_11_3_2_0 = (RuleCall)cPreState1Assignment_11_3_2.eContents().get(0);
		private final Alternatives cAlternatives_11_3_3 = (Alternatives)cGroup_11_3.eContents().get(3);
		private final Keyword cOutKeyword_11_3_3_0 = (Keyword)cAlternatives_11_3_3.eContents().get(0);
		private final Keyword cOffKeyword_11_3_3_1 = (Keyword)cAlternatives_11_3_3.eContents().get(1);
		private final Keyword cOnKeyword_11_3_3_2 = (Keyword)cAlternatives_11_3_3.eContents().get(2);
		private final Keyword cInKeyword_11_3_3_3 = (Keyword)cAlternatives_11_3_3.eContents().get(3);
		private final Group cGroup_11_3_3_4 = (Group)cAlternatives_11_3_3.eContents().get(4);
		private final Keyword cToKeyword_11_3_3_4_0 = (Keyword)cGroup_11_3_3_4.eContents().get(0);
		private final Keyword cTheKeyword_11_3_3_4_1 = (Keyword)cGroup_11_3_3_4.eContents().get(1);
		private final Keyword cToKeyword_11_3_3_5 = (Keyword)cAlternatives_11_3_3.eContents().get(5);
		private final Alternatives cAlternatives_11_3_4 = (Alternatives)cGroup_11_3.eContents().get(4);
		private final RuleCall cWORDParserRuleCall_11_3_4_0 = (RuleCall)cAlternatives_11_3_4.eContents().get(0);
		private final Group cGroup_11_3_4_1 = (Group)cAlternatives_11_3_4.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_3_4_1_0 = (RuleCall)cGroup_11_3_4_1.eContents().get(0);
		private final Alternatives cAlternatives_11_3_4_1_1 = (Alternatives)cGroup_11_3_4_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_3_4_1_1_0 = (Keyword)cAlternatives_11_3_4_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_3_4_1_1_1 = (Keyword)cAlternatives_11_3_4_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_3_4_1_2 = (RuleCall)cGroup_11_3_4_1.eContents().get(2);
		private final Group cGroup_11_3_4_2 = (Group)cAlternatives_11_3_4.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_3_4_2_0 = (RuleCall)cGroup_11_3_4_2.eContents().get(0);
		private final Keyword cInKeyword_11_3_4_2_1 = (Keyword)cGroup_11_3_4_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_3_4_2_2 = (RuleCall)cGroup_11_3_4_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_3_5 = (RuleCall)cGroup_11_3.eContents().get(5);
		private final Alternatives cAlternatives_11_3_6 = (Alternatives)cGroup_11_3.eContents().get(6);
		private final Group cGroup_11_3_6_0 = (Group)cAlternatives_11_3_6.eContents().get(0);
		private final Keyword cWhenKeyword_11_3_6_0_0 = (Keyword)cGroup_11_3_6_0.eContents().get(0);
		private final Keyword cIKeyword_11_3_6_0_1 = (Keyword)cGroup_11_3_6_0.eContents().get(1);
		private final Group cGroup_11_3_6_1 = (Group)cAlternatives_11_3_6.eContents().get(1);
		private final Keyword cWhenKeyword_11_3_6_1_0 = (Keyword)cGroup_11_3_6_1.eContents().get(0);
		private final Keyword cIKeyword_11_3_6_1_1 = (Keyword)cGroup_11_3_6_1.eContents().get(1);
		private final Keyword cDoKeyword_11_3_6_1_2 = (Keyword)cGroup_11_3_6_1.eContents().get(2);
		private final Keyword cNotKeyword_11_3_6_1_3 = (Keyword)cGroup_11_3_6_1.eContents().get(3);
		private final Group cGroup_11_3_6_2 = (Group)cAlternatives_11_3_6.eContents().get(2);
		private final Keyword cWhenKeyword_11_3_6_2_0 = (Keyword)cGroup_11_3_6_2.eContents().get(0);
		private final Keyword cTheKeyword_11_3_6_2_1 = (Keyword)cGroup_11_3_6_2.eContents().get(1);
		private final Group cGroup_11_3_6_3 = (Group)cAlternatives_11_3_6.eContents().get(3);
		private final Keyword cGivenKeyword_11_3_6_3_0 = (Keyword)cGroup_11_3_6_3.eContents().get(0);
		private final Keyword cIKeyword_11_3_6_3_1 = (Keyword)cGroup_11_3_6_3.eContents().get(1);
		private final Assignment cAction1Assignment_11_3_7 = (Assignment)cGroup_11_3.eContents().get(7);
		private final RuleCall cAction1ScenarioActionParserRuleCall_11_3_7_0 = (RuleCall)cAction1Assignment_11_3_7.eContents().get(0);
		private final Keyword cThenKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Alternatives cAlternatives_11_5 = (Alternatives)cGroup_11.eContents().get(5);
		private final Keyword cTheKeyword_11_5_0 = (Keyword)cAlternatives_11_5.eContents().get(0);
		private final Group cGroup_11_5_1 = (Group)cAlternatives_11_5.eContents().get(1);
		private final Keyword cAllKeyword_11_5_1_0 = (Keyword)cGroup_11_5_1.eContents().get(0);
		private final Keyword cTheKeyword_11_5_1_1 = (Keyword)cGroup_11_5_1.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_11_6 = (RuleCall)cGroup_11.eContents().get(6);
		private final Assignment cPostState1Assignment_11_7 = (Assignment)cGroup_11.eContents().get(7);
		private final RuleCall cPostState1ScenarioStateParserRuleCall_11_7_0 = (RuleCall)cPostState1Assignment_11_7.eContents().get(0);
		private final Alternatives cAlternatives_11_8 = (Alternatives)cGroup_11.eContents().get(8);
		private final Keyword cOutKeyword_11_8_0 = (Keyword)cAlternatives_11_8.eContents().get(0);
		private final Keyword cOffKeyword_11_8_1 = (Keyword)cAlternatives_11_8.eContents().get(1);
		private final Keyword cOnKeyword_11_8_2 = (Keyword)cAlternatives_11_8.eContents().get(2);
		private final Keyword cInKeyword_11_8_3 = (Keyword)cAlternatives_11_8.eContents().get(3);
		private final Group cGroup_11_8_4 = (Group)cAlternatives_11_8.eContents().get(4);
		private final Keyword cToKeyword_11_8_4_0 = (Keyword)cGroup_11_8_4.eContents().get(0);
		private final Keyword cTheKeyword_11_8_4_1 = (Keyword)cGroup_11_8_4.eContents().get(1);
		private final Keyword cToKeyword_11_8_5 = (Keyword)cAlternatives_11_8.eContents().get(5);
		private final Alternatives cAlternatives_11_9 = (Alternatives)cGroup_11.eContents().get(9);
		private final RuleCall cWORDParserRuleCall_11_9_0 = (RuleCall)cAlternatives_11_9.eContents().get(0);
		private final Group cGroup_11_9_1 = (Group)cAlternatives_11_9.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_9_1_0 = (RuleCall)cGroup_11_9_1.eContents().get(0);
		private final Alternatives cAlternatives_11_9_1_1 = (Alternatives)cGroup_11_9_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_9_1_1_0 = (Keyword)cAlternatives_11_9_1_1.eContents().get(0);
		private final Keyword cTheKeyword_11_9_1_1_1 = (Keyword)cAlternatives_11_9_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_9_1_2 = (RuleCall)cGroup_11_9_1.eContents().get(2);
		private final Group cGroup_11_9_2 = (Group)cAlternatives_11_9.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_9_2_0 = (RuleCall)cGroup_11_9_2.eContents().get(0);
		private final Keyword cInKeyword_11_9_2_1 = (Keyword)cGroup_11_9_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_11_9_2_2 = (RuleCall)cGroup_11_9_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_11_10 = (RuleCall)cGroup_11.eContents().get(10);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Group cGroup_12_0 = (Group)cGroup_12.eContents().get(0);
		private final Alternatives cAlternatives_12_0_0 = (Alternatives)cGroup_12_0.eContents().get(0);
		private final Group cGroup_12_0_0_0 = (Group)cAlternatives_12_0_0.eContents().get(0);
		private final Alternatives cAlternatives_12_0_0_0_0 = (Alternatives)cGroup_12_0_0_0.eContents().get(0);
		private final Group cGroup_12_0_0_0_0_0 = (Group)cAlternatives_12_0_0_0_0.eContents().get(0);
		private final Keyword cThenKeyword_12_0_0_0_0_0_0 = (Keyword)cGroup_12_0_0_0_0_0.eContents().get(0);
		private final Keyword cTheKeyword_12_0_0_0_0_0_1 = (Keyword)cGroup_12_0_0_0_0_0.eContents().get(1);
		private final Group cGroup_12_0_0_0_0_1 = (Group)cAlternatives_12_0_0_0_0.eContents().get(1);
		private final Keyword cThenKeyword_12_0_0_0_0_1_0 = (Keyword)cGroup_12_0_0_0_0_1.eContents().get(0);
		private final Keyword cIKeyword_12_0_0_0_0_1_1 = (Keyword)cGroup_12_0_0_0_0_1.eContents().get(1);
		private final Keyword cThenKeyword_12_0_0_0_0_2 = (Keyword)cAlternatives_12_0_0_0_0.eContents().get(2);
		private final Group cGroup_12_0_0_0_1 = (Group)cGroup_12_0_0_0.eContents().get(1);
		private final Keyword cDoKeyword_12_0_0_0_1_0 = (Keyword)cGroup_12_0_0_0_1.eContents().get(0);
		private final Keyword cNotKeyword_12_0_0_0_1_1 = (Keyword)cGroup_12_0_0_0_1.eContents().get(1);
		private final RuleCall cOPTIONParserRuleCall_12_0_0_0_2 = (RuleCall)cGroup_12_0_0_0.eContents().get(2);
		private final Group cGroup_12_0_0_1 = (Group)cAlternatives_12_0_0.eContents().get(1);
		private final Keyword cThenKeyword_12_0_0_1_0 = (Keyword)cGroup_12_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_12_0_0_1_1 = (Alternatives)cGroup_12_0_0_1.eContents().get(1);
		private final Keyword cTheKeyword_12_0_0_1_1_0 = (Keyword)cAlternatives_12_0_0_1_1.eContents().get(0);
		private final Group cGroup_12_0_0_1_1_1 = (Group)cAlternatives_12_0_0_1_1.eContents().get(1);
		private final Keyword cAllKeyword_12_0_0_1_1_1_0 = (Keyword)cGroup_12_0_0_1_1_1.eContents().get(0);
		private final Keyword cTheKeyword_12_0_0_1_1_1_1 = (Keyword)cGroup_12_0_0_1_1_1.eContents().get(1);
		private final Keyword cIKeyword_12_0_0_1_1_2 = (Keyword)cAlternatives_12_0_0_1_1.eContents().get(2);
		private final Group cGroup_12_0_0_1_2 = (Group)cGroup_12_0_0_1.eContents().get(2);
		private final Keyword cDoKeyword_12_0_0_1_2_0 = (Keyword)cGroup_12_0_0_1_2.eContents().get(0);
		private final Keyword cNotKeyword_12_0_0_1_2_1 = (Keyword)cGroup_12_0_0_1_2.eContents().get(1);
		private final Assignment cPreStateE1Assignment_12_0_0_1_3 = (Assignment)cGroup_12_0_0_1.eContents().get(3);
		private final RuleCall cPreStateE1ScenarioStateParserRuleCall_12_0_0_1_3_0 = (RuleCall)cPreStateE1Assignment_12_0_0_1_3.eContents().get(0);
		private final Keyword cWhichKeyword_12_0_1 = (Keyword)cGroup_12_0.eContents().get(1);
		private final Keyword cMeansKeyword_12_0_2 = (Keyword)cGroup_12_0.eContents().get(2);
		private final Group cGroup_12_1 = (Group)cGroup_12.eContents().get(1);
		private final Keyword cGivenKeyword_12_1_0 = (Keyword)cGroup_12_1.eContents().get(0);
		private final Alternatives cAlternatives_12_1_1 = (Alternatives)cGroup_12_1.eContents().get(1);
		private final Keyword cTheKeyword_12_1_1_0 = (Keyword)cAlternatives_12_1_1.eContents().get(0);
		private final Group cGroup_12_1_1_1 = (Group)cAlternatives_12_1_1.eContents().get(1);
		private final Keyword cAllKeyword_12_1_1_1_0 = (Keyword)cGroup_12_1_1_1.eContents().get(0);
		private final Keyword cTheKeyword_12_1_1_1_1 = (Keyword)cGroup_12_1_1_1.eContents().get(1);
		private final Assignment cPreState2Assignment_12_1_2 = (Assignment)cGroup_12_1.eContents().get(2);
		private final RuleCall cPreState2ScenarioStateParserRuleCall_12_1_2_0 = (RuleCall)cPreState2Assignment_12_1_2.eContents().get(0);
		private final Alternatives cAlternatives_12_1_3 = (Alternatives)cGroup_12_1.eContents().get(3);
		private final Keyword cOutKeyword_12_1_3_0 = (Keyword)cAlternatives_12_1_3.eContents().get(0);
		private final Keyword cOffKeyword_12_1_3_1 = (Keyword)cAlternatives_12_1_3.eContents().get(1);
		private final Keyword cOnKeyword_12_1_3_2 = (Keyword)cAlternatives_12_1_3.eContents().get(2);
		private final Keyword cInKeyword_12_1_3_3 = (Keyword)cAlternatives_12_1_3.eContents().get(3);
		private final Group cGroup_12_1_3_4 = (Group)cAlternatives_12_1_3.eContents().get(4);
		private final Keyword cToKeyword_12_1_3_4_0 = (Keyword)cGroup_12_1_3_4.eContents().get(0);
		private final Keyword cTheKeyword_12_1_3_4_1 = (Keyword)cGroup_12_1_3_4.eContents().get(1);
		private final Keyword cToKeyword_12_1_3_5 = (Keyword)cAlternatives_12_1_3.eContents().get(5);
		private final Alternatives cAlternatives_12_1_4 = (Alternatives)cGroup_12_1.eContents().get(4);
		private final RuleCall cWORDParserRuleCall_12_1_4_0 = (RuleCall)cAlternatives_12_1_4.eContents().get(0);
		private final Group cGroup_12_1_4_1 = (Group)cAlternatives_12_1_4.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_1_4_1_0 = (RuleCall)cGroup_12_1_4_1.eContents().get(0);
		private final Alternatives cAlternatives_12_1_4_1_1 = (Alternatives)cGroup_12_1_4_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_12_1_4_1_1_0 = (Keyword)cAlternatives_12_1_4_1_1.eContents().get(0);
		private final Keyword cTheKeyword_12_1_4_1_1_1 = (Keyword)cAlternatives_12_1_4_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_1_4_1_2 = (RuleCall)cGroup_12_1_4_1.eContents().get(2);
		private final Group cGroup_12_1_4_2 = (Group)cAlternatives_12_1_4.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_12_1_4_2_0 = (RuleCall)cGroup_12_1_4_2.eContents().get(0);
		private final Keyword cInKeyword_12_1_4_2_1 = (Keyword)cGroup_12_1_4_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_1_4_2_2 = (RuleCall)cGroup_12_1_4_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_12_1_5 = (RuleCall)cGroup_12_1.eContents().get(5);
		private final Alternatives cAlternatives_12_1_6 = (Alternatives)cGroup_12_1.eContents().get(6);
		private final Group cGroup_12_1_6_0 = (Group)cAlternatives_12_1_6.eContents().get(0);
		private final Keyword cWhenKeyword_12_1_6_0_0 = (Keyword)cGroup_12_1_6_0.eContents().get(0);
		private final Keyword cIKeyword_12_1_6_0_1 = (Keyword)cGroup_12_1_6_0.eContents().get(1);
		private final Group cGroup_12_1_6_1 = (Group)cAlternatives_12_1_6.eContents().get(1);
		private final Keyword cWhenKeyword_12_1_6_1_0 = (Keyword)cGroup_12_1_6_1.eContents().get(0);
		private final Keyword cIKeyword_12_1_6_1_1 = (Keyword)cGroup_12_1_6_1.eContents().get(1);
		private final Keyword cDoKeyword_12_1_6_1_2 = (Keyword)cGroup_12_1_6_1.eContents().get(2);
		private final Keyword cNotKeyword_12_1_6_1_3 = (Keyword)cGroup_12_1_6_1.eContents().get(3);
		private final Group cGroup_12_1_6_2 = (Group)cAlternatives_12_1_6.eContents().get(2);
		private final Keyword cWhenKeyword_12_1_6_2_0 = (Keyword)cGroup_12_1_6_2.eContents().get(0);
		private final Keyword cTheKeyword_12_1_6_2_1 = (Keyword)cGroup_12_1_6_2.eContents().get(1);
		private final Group cGroup_12_1_6_3 = (Group)cAlternatives_12_1_6.eContents().get(3);
		private final Keyword cGivenKeyword_12_1_6_3_0 = (Keyword)cGroup_12_1_6_3.eContents().get(0);
		private final Keyword cIKeyword_12_1_6_3_1 = (Keyword)cGroup_12_1_6_3.eContents().get(1);
		private final Assignment cAction2Assignment_12_1_7 = (Assignment)cGroup_12_1.eContents().get(7);
		private final RuleCall cAction2ScenarioActionParserRuleCall_12_1_7_0 = (RuleCall)cAction2Assignment_12_1_7.eContents().get(0);
		private final Keyword cThenKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Alternatives cAlternatives_12_3 = (Alternatives)cGroup_12.eContents().get(3);
		private final Keyword cTheKeyword_12_3_0 = (Keyword)cAlternatives_12_3.eContents().get(0);
		private final Group cGroup_12_3_1 = (Group)cAlternatives_12_3.eContents().get(1);
		private final Keyword cAllKeyword_12_3_1_0 = (Keyword)cGroup_12_3_1.eContents().get(0);
		private final Keyword cTheKeyword_12_3_1_1 = (Keyword)cGroup_12_3_1.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_12_4 = (RuleCall)cGroup_12.eContents().get(4);
		private final Assignment cPostState2Assignment_12_5 = (Assignment)cGroup_12.eContents().get(5);
		private final RuleCall cPostState2ScenarioStateParserRuleCall_12_5_0 = (RuleCall)cPostState2Assignment_12_5.eContents().get(0);
		private final Alternatives cAlternatives_12_6 = (Alternatives)cGroup_12.eContents().get(6);
		private final Keyword cOutKeyword_12_6_0 = (Keyword)cAlternatives_12_6.eContents().get(0);
		private final Keyword cOffKeyword_12_6_1 = (Keyword)cAlternatives_12_6.eContents().get(1);
		private final Keyword cOnKeyword_12_6_2 = (Keyword)cAlternatives_12_6.eContents().get(2);
		private final Keyword cInKeyword_12_6_3 = (Keyword)cAlternatives_12_6.eContents().get(3);
		private final Group cGroup_12_6_4 = (Group)cAlternatives_12_6.eContents().get(4);
		private final Keyword cToKeyword_12_6_4_0 = (Keyword)cGroup_12_6_4.eContents().get(0);
		private final Keyword cTheKeyword_12_6_4_1 = (Keyword)cGroup_12_6_4.eContents().get(1);
		private final Keyword cToKeyword_12_6_5 = (Keyword)cAlternatives_12_6.eContents().get(5);
		private final Alternatives cAlternatives_12_7 = (Alternatives)cGroup_12.eContents().get(7);
		private final RuleCall cWORDParserRuleCall_12_7_0 = (RuleCall)cAlternatives_12_7.eContents().get(0);
		private final Group cGroup_12_7_1 = (Group)cAlternatives_12_7.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_7_1_0 = (RuleCall)cGroup_12_7_1.eContents().get(0);
		private final Alternatives cAlternatives_12_7_1_1 = (Alternatives)cGroup_12_7_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_12_7_1_1_0 = (Keyword)cAlternatives_12_7_1_1.eContents().get(0);
		private final Keyword cTheKeyword_12_7_1_1_1 = (Keyword)cAlternatives_12_7_1_1.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_7_1_2 = (RuleCall)cGroup_12_7_1.eContents().get(2);
		private final Group cGroup_12_7_2 = (Group)cAlternatives_12_7.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_12_7_2_0 = (RuleCall)cGroup_12_7_2.eContents().get(0);
		private final Keyword cInKeyword_12_7_2_1 = (Keyword)cGroup_12_7_2.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_12_7_2_2 = (RuleCall)cGroup_12_7_2.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_12_8 = (RuleCall)cGroup_12.eContents().get(8);
		
		//Scenario:
		//       'Scenario:' name = ID_OR_STRING WORD? ('out'|'off'|'on'|'in'|'-'|'the'|'to' 'the'|'to')? WORD? ('off'|'on'|'in'|'-'|'the')? WORD? ('on'|'in'|'-'|'the')? WORD? ('in'|'-'|'the')? WORD?
		//       (((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
		//       'which' 'means')?
		//       (
		//       'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction
		//       'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		//       )
		//       (
		//           ((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
		//       'which' 'means')?
		//      ( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
		//       'Then' ('the'|'all' 'the')? (STRING)? postState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		//       )?
		//       (((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
		//       'which' 'means')?
		//       ('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
		//       'Then' ('the'|'all' 'the')? (STRING)? postState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		//       )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// 'Scenario:' name = ID_OR_STRING WORD? ('out'|'off'|'on'|'in'|'-'|'the'|'to' 'the'|'to')? WORD? ('off'|'on'|'in'|'-'|'the')? WORD? ('on'|'in'|'-'|'the')? WORD? ('in'|'-'|'the')? WORD?
		// (((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
		// 'which' 'means')?
		// (
		// 'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction
		// 'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		// )
		// (
		//     ((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
		// 'which' 'means')?
		//( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
		// 'Then' ('the'|'all' 'the')? (STRING)? postState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		// )?
		// (((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
		// 'which' 'means')?
		// ('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
		// 'Then' ('the'|'all' 'the')? (STRING)? postState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		// )?
		public Group getGroup() { return cGroup; }
		
		//'Scenario:'
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }
		
		//name = ID_OR_STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID_OR_STRING
		public RuleCall getNameID_OR_STRINGParserRuleCall_1_0() { return cNameID_OR_STRINGParserRuleCall_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_2() { return cWORDParserRuleCall_2; }
		
		//('out'|'off'|'on'|'in'|'-'|'the'|'to' 'the'|'to')?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'out'
		public Keyword getOutKeyword_3_0() { return cOutKeyword_3_0; }
		
		//'off'
		public Keyword getOffKeyword_3_1() { return cOffKeyword_3_1; }
		
		//'on'
		public Keyword getOnKeyword_3_2() { return cOnKeyword_3_2; }
		
		//'in'
		public Keyword getInKeyword_3_3() { return cInKeyword_3_3; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_4() { return cHyphenMinusKeyword_3_4; }
		
		//'the'
		public Keyword getTheKeyword_3_5() { return cTheKeyword_3_5; }
		
		//'to' 'the'
		public Group getGroup_3_6() { return cGroup_3_6; }
		
		//'to'
		public Keyword getToKeyword_3_6_0() { return cToKeyword_3_6_0; }
		
		//'the'
		public Keyword getTheKeyword_3_6_1() { return cTheKeyword_3_6_1; }
		
		//'to'
		public Keyword getToKeyword_3_7() { return cToKeyword_3_7; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_4() { return cWORDParserRuleCall_4; }
		
		//('off'|'on'|'in'|'-'|'the')?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//'off'
		public Keyword getOffKeyword_5_0() { return cOffKeyword_5_0; }
		
		//'on'
		public Keyword getOnKeyword_5_1() { return cOnKeyword_5_1; }
		
		//'in'
		public Keyword getInKeyword_5_2() { return cInKeyword_5_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_3() { return cHyphenMinusKeyword_5_3; }
		
		//'the'
		public Keyword getTheKeyword_5_4() { return cTheKeyword_5_4; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_6() { return cWORDParserRuleCall_6; }
		
		//('on'|'in'|'-'|'the')?
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//'on'
		public Keyword getOnKeyword_7_0() { return cOnKeyword_7_0; }
		
		//'in'
		public Keyword getInKeyword_7_1() { return cInKeyword_7_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_7_2() { return cHyphenMinusKeyword_7_2; }
		
		//'the'
		public Keyword getTheKeyword_7_3() { return cTheKeyword_7_3; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_8() { return cWORDParserRuleCall_8; }
		
		//('in'|'-'|'the')?
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//'in'
		public Keyword getInKeyword_9_0() { return cInKeyword_9_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_9_1() { return cHyphenMinusKeyword_9_1; }
		
		//'the'
		public Keyword getTheKeyword_9_2() { return cTheKeyword_9_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_10() { return cWORDParserRuleCall_10; }
		
		// (((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
		// 'which' 'means')?
		// (
		// 'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction
		// 'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		// )
		// (
		//     ((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
		// 'which' 'means')?
		//( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
		// 'Then' ('the'|'all' 'the')? (STRING)? postState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		// )?
		public Group getGroup_11() { return cGroup_11; }
		
		//((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
		//       'which' 'means')?
		public Group getGroup_11_0() { return cGroup_11_0; }
		
		//(('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
		public Alternatives getAlternatives_11_0_0() { return cAlternatives_11_0_0; }
		
		//('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION))
		public Group getGroup_11_0_0_0() { return cGroup_11_0_0_0; }
		
		//('Given''the'|'Given''I'|'Given')
		public Alternatives getAlternatives_11_0_0_0_0() { return cAlternatives_11_0_0_0_0; }
		
		//'Given''the'
		public Group getGroup_11_0_0_0_0_0() { return cGroup_11_0_0_0_0_0; }
		
		//'Given'
		public Keyword getGivenKeyword_11_0_0_0_0_0_0() { return cGivenKeyword_11_0_0_0_0_0_0; }
		
		//'the'
		public Keyword getTheKeyword_11_0_0_0_0_0_1() { return cTheKeyword_11_0_0_0_0_0_1; }
		
		//'Given''I'
		public Group getGroup_11_0_0_0_0_1() { return cGroup_11_0_0_0_0_1; }
		
		//'Given'
		public Keyword getGivenKeyword_11_0_0_0_0_1_0() { return cGivenKeyword_11_0_0_0_0_1_0; }
		
		//'I'
		public Keyword getIKeyword_11_0_0_0_0_1_1() { return cIKeyword_11_0_0_0_0_1_1; }
		
		//'Given'
		public Keyword getGivenKeyword_11_0_0_0_0_2() { return cGivenKeyword_11_0_0_0_0_2; }
		
		//('do' 'not')?
		public Group getGroup_11_0_0_0_1() { return cGroup_11_0_0_0_1; }
		
		//'do'
		public Keyword getDoKeyword_11_0_0_0_1_0() { return cDoKeyword_11_0_0_0_1_0; }
		
		//'not'
		public Keyword getNotKeyword_11_0_0_0_1_1() { return cNotKeyword_11_0_0_0_1_1; }
		
		//((OPTION))
		public RuleCall getOPTIONParserRuleCall_11_0_0_0_2() { return cOPTIONParserRuleCall_11_0_0_0_2; }
		
		//('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState)
		public Group getGroup_11_0_0_1() { return cGroup_11_0_0_1; }
		
		//'Given'
		public Keyword getGivenKeyword_11_0_0_1_0() { return cGivenKeyword_11_0_0_1_0; }
		
		//('the'|'all' 'the'|'I')?
		public Alternatives getAlternatives_11_0_0_1_1() { return cAlternatives_11_0_0_1_1; }
		
		//'the'
		public Keyword getTheKeyword_11_0_0_1_1_0() { return cTheKeyword_11_0_0_1_1_0; }
		
		//'all' 'the'
		public Group getGroup_11_0_0_1_1_1() { return cGroup_11_0_0_1_1_1; }
		
		//'all'
		public Keyword getAllKeyword_11_0_0_1_1_1_0() { return cAllKeyword_11_0_0_1_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_0_0_1_1_1_1() { return cTheKeyword_11_0_0_1_1_1_1; }
		
		//'I'
		public Keyword getIKeyword_11_0_0_1_1_2() { return cIKeyword_11_0_0_1_1_2; }
		
		//('do' 'not')?
		public Group getGroup_11_0_0_1_2() { return cGroup_11_0_0_1_2; }
		
		//'do'
		public Keyword getDoKeyword_11_0_0_1_2_0() { return cDoKeyword_11_0_0_1_2_0; }
		
		//'not'
		public Keyword getNotKeyword_11_0_0_1_2_1() { return cNotKeyword_11_0_0_1_2_1; }
		
		//preStateE = ScenarioState
		public Assignment getPreStateEAssignment_11_0_0_1_3() { return cPreStateEAssignment_11_0_0_1_3; }
		
		//ScenarioState
		public RuleCall getPreStateEScenarioStateParserRuleCall_11_0_0_1_3_0() { return cPreStateEScenarioStateParserRuleCall_11_0_0_1_3_0; }
		
		//'which'
		public Keyword getWhichKeyword_11_0_1() { return cWhichKeyword_11_0_1; }
		
		//'means'
		public Keyword getMeansKeyword_11_0_2() { return cMeansKeyword_11_0_2; }
		
		//(
		//'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction
		//'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		//)
		public Group getGroup_11_1() { return cGroup_11_1; }
		
		//'Given'
		public Keyword getGivenKeyword_11_1_0() { return cGivenKeyword_11_1_0; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_11_1_1() { return cAlternatives_11_1_1; }
		
		//'the'
		public Keyword getTheKeyword_11_1_1_0() { return cTheKeyword_11_1_1_0; }
		
		//'all' 'the'
		public Group getGroup_11_1_1_1() { return cGroup_11_1_1_1; }
		
		//'all'
		public Keyword getAllKeyword_11_1_1_1_0() { return cAllKeyword_11_1_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_1_1_1() { return cTheKeyword_11_1_1_1_1; }
		
		//preState = ScenarioState
		public Assignment getPreStateAssignment_11_1_2() { return cPreStateAssignment_11_1_2; }
		
		//ScenarioState
		public RuleCall getPreStateScenarioStateParserRuleCall_11_1_2_0() { return cPreStateScenarioStateParserRuleCall_11_1_2_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_11_1_3() { return cAlternatives_11_1_3; }
		
		//'out'
		public Keyword getOutKeyword_11_1_3_0() { return cOutKeyword_11_1_3_0; }
		
		//'off'
		public Keyword getOffKeyword_11_1_3_1() { return cOffKeyword_11_1_3_1; }
		
		//'on'
		public Keyword getOnKeyword_11_1_3_2() { return cOnKeyword_11_1_3_2; }
		
		//'in'
		public Keyword getInKeyword_11_1_3_3() { return cInKeyword_11_1_3_3; }
		
		//'to' 'the'
		public Group getGroup_11_1_3_4() { return cGroup_11_1_3_4; }
		
		//'to'
		public Keyword getToKeyword_11_1_3_4_0() { return cToKeyword_11_1_3_4_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_3_4_1() { return cTheKeyword_11_1_3_4_1; }
		
		//'to'
		public Keyword getToKeyword_11_1_3_5() { return cToKeyword_11_1_3_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?))
		public Alternatives getAlternatives_11_1_4() { return cAlternatives_11_1_4; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_4_0() { return cWORDParserRuleCall_11_1_4_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_11_1_4_1() { return cGroup_11_1_4_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_4_1_0() { return cWORDParserRuleCall_11_1_4_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_11_1_4_1_1() { return cAlternatives_11_1_4_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_1_4_1_1_0() { return cHyphenMinusKeyword_11_1_4_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_4_1_1_1() { return cTheKeyword_11_1_4_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_4_1_2() { return cWORDParserRuleCall_11_1_4_1_2; }
		
		//(WORD? 'in'? WORD?)
		public Group getGroup_11_1_4_2() { return cGroup_11_1_4_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_4_2_0() { return cWORDParserRuleCall_11_1_4_2_0; }
		
		//'in'?
		public Keyword getInKeyword_11_1_4_2_1() { return cInKeyword_11_1_4_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_4_2_2() { return cWORDParserRuleCall_11_1_4_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_5() { return cWORDParserRuleCall_11_1_5; }
		
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I'))
		public Alternatives getAlternatives_11_1_6() { return cAlternatives_11_1_6; }
		
		//('When' 'I')
		public Group getGroup_11_1_6_0() { return cGroup_11_1_6_0; }
		
		//'When'
		public Keyword getWhenKeyword_11_1_6_0_0() { return cWhenKeyword_11_1_6_0_0; }
		
		//'I'
		public Keyword getIKeyword_11_1_6_0_1() { return cIKeyword_11_1_6_0_1; }
		
		//('When' 'I' 'do' 'not')
		public Group getGroup_11_1_6_1() { return cGroup_11_1_6_1; }
		
		//'When'
		public Keyword getWhenKeyword_11_1_6_1_0() { return cWhenKeyword_11_1_6_1_0; }
		
		//'I'
		public Keyword getIKeyword_11_1_6_1_1() { return cIKeyword_11_1_6_1_1; }
		
		//'do'
		public Keyword getDoKeyword_11_1_6_1_2() { return cDoKeyword_11_1_6_1_2; }
		
		//'not'
		public Keyword getNotKeyword_11_1_6_1_3() { return cNotKeyword_11_1_6_1_3; }
		
		//('When' 'the')
		public Group getGroup_11_1_6_2() { return cGroup_11_1_6_2; }
		
		//'When'
		public Keyword getWhenKeyword_11_1_6_2_0() { return cWhenKeyword_11_1_6_2_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_6_2_1() { return cTheKeyword_11_1_6_2_1; }
		
		//('Given' 'I')
		public Group getGroup_11_1_6_3() { return cGroup_11_1_6_3; }
		
		//'Given'
		public Keyword getGivenKeyword_11_1_6_3_0() { return cGivenKeyword_11_1_6_3_0; }
		
		//'I'
		public Keyword getIKeyword_11_1_6_3_1() { return cIKeyword_11_1_6_3_1; }
		
		//action = ScenarioAction
		public Assignment getActionAssignment_11_1_7() { return cActionAssignment_11_1_7; }
		
		//ScenarioAction
		public RuleCall getActionScenarioActionParserRuleCall_11_1_7_0() { return cActionScenarioActionParserRuleCall_11_1_7_0; }
		
		//'Then'
		public Keyword getThenKeyword_11_1_8() { return cThenKeyword_11_1_8; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_11_1_9() { return cAlternatives_11_1_9; }
		
		//'the'
		public Keyword getTheKeyword_11_1_9_0() { return cTheKeyword_11_1_9_0; }
		
		//'all' 'the'
		public Group getGroup_11_1_9_1() { return cGroup_11_1_9_1; }
		
		//'all'
		public Keyword getAllKeyword_11_1_9_1_0() { return cAllKeyword_11_1_9_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_9_1_1() { return cTheKeyword_11_1_9_1_1; }
		
		//(STRING)?
		public RuleCall getSTRINGTerminalRuleCall_11_1_10() { return cSTRINGTerminalRuleCall_11_1_10; }
		
		//postState = ScenarioState
		public Assignment getPostStateAssignment_11_1_11() { return cPostStateAssignment_11_1_11; }
		
		//ScenarioState
		public RuleCall getPostStateScenarioStateParserRuleCall_11_1_11_0() { return cPostStateScenarioStateParserRuleCall_11_1_11_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_11_1_12() { return cAlternatives_11_1_12; }
		
		//'out'
		public Keyword getOutKeyword_11_1_12_0() { return cOutKeyword_11_1_12_0; }
		
		//'off'
		public Keyword getOffKeyword_11_1_12_1() { return cOffKeyword_11_1_12_1; }
		
		//'on'
		public Keyword getOnKeyword_11_1_12_2() { return cOnKeyword_11_1_12_2; }
		
		//'in'
		public Keyword getInKeyword_11_1_12_3() { return cInKeyword_11_1_12_3; }
		
		//'to' 'the'
		public Group getGroup_11_1_12_4() { return cGroup_11_1_12_4; }
		
		//'to'
		public Keyword getToKeyword_11_1_12_4_0() { return cToKeyword_11_1_12_4_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_12_4_1() { return cTheKeyword_11_1_12_4_1; }
		
		//'to'
		public Keyword getToKeyword_11_1_12_5() { return cToKeyword_11_1_12_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?))
		public Alternatives getAlternatives_11_1_13() { return cAlternatives_11_1_13; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_13_0() { return cWORDParserRuleCall_11_1_13_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_11_1_13_1() { return cGroup_11_1_13_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_13_1_0() { return cWORDParserRuleCall_11_1_13_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_11_1_13_1_1() { return cAlternatives_11_1_13_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_1_13_1_1_0() { return cHyphenMinusKeyword_11_1_13_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_1_13_1_1_1() { return cTheKeyword_11_1_13_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_13_1_2() { return cWORDParserRuleCall_11_1_13_1_2; }
		
		//(WORD? 'in' WORD?)
		public Group getGroup_11_1_13_2() { return cGroup_11_1_13_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_13_2_0() { return cWORDParserRuleCall_11_1_13_2_0; }
		
		//'in'
		public Keyword getInKeyword_11_1_13_2_1() { return cInKeyword_11_1_13_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_13_2_2() { return cWORDParserRuleCall_11_1_13_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_1_14() { return cWORDParserRuleCall_11_1_14; }
		
		//(
		//    ((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
		//'which' 'means')?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
		public Alternatives getAlternatives_11_2_0() { return cAlternatives_11_2_0; }
		
		//(('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION)))
		public Group getGroup_11_2_0_0() { return cGroup_11_2_0_0; }
		
		//('When' 'I'|'When' 'the'|'When'|'And''I')
		public Alternatives getAlternatives_11_2_0_0_0() { return cAlternatives_11_2_0_0_0; }
		
		//'When' 'I'
		public Group getGroup_11_2_0_0_0_0() { return cGroup_11_2_0_0_0_0; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_0_0_0_0() { return cWhenKeyword_11_2_0_0_0_0_0; }
		
		//'I'
		public Keyword getIKeyword_11_2_0_0_0_0_1() { return cIKeyword_11_2_0_0_0_0_1; }
		
		//'When' 'the'
		public Group getGroup_11_2_0_0_0_1() { return cGroup_11_2_0_0_0_1; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_0_0_1_0() { return cWhenKeyword_11_2_0_0_0_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_2_0_0_0_1_1() { return cTheKeyword_11_2_0_0_0_1_1; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_0_0_2() { return cWhenKeyword_11_2_0_0_0_2; }
		
		//'And''I'
		public Group getGroup_11_2_0_0_0_3() { return cGroup_11_2_0_0_0_3; }
		
		//'And'
		public Keyword getAndKeyword_11_2_0_0_0_3_0() { return cAndKeyword_11_2_0_0_0_3_0; }
		
		//'I'
		public Keyword getIKeyword_11_2_0_0_0_3_1() { return cIKeyword_11_2_0_0_0_3_1; }
		
		//('do' 'not')?
		public Group getGroup_11_2_0_0_1() { return cGroup_11_2_0_0_1; }
		
		//'do'
		public Keyword getDoKeyword_11_2_0_0_1_0() { return cDoKeyword_11_2_0_0_1_0; }
		
		//'not'
		public Keyword getNotKeyword_11_2_0_0_1_1() { return cNotKeyword_11_2_0_0_1_1; }
		
		//((OPTION))
		public RuleCall getOPTIONParserRuleCall_11_2_0_0_2() { return cOPTIONParserRuleCall_11_2_0_0_2; }
		
		//((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction )
		public Group getGroup_11_2_0_1() { return cGroup_11_2_0_1; }
		
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I'))
		public Alternatives getAlternatives_11_2_0_1_0() { return cAlternatives_11_2_0_1_0; }
		
		//('When' 'I')
		public Group getGroup_11_2_0_1_0_0() { return cGroup_11_2_0_1_0_0; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_1_0_0_0() { return cWhenKeyword_11_2_0_1_0_0_0; }
		
		//'I'
		public Keyword getIKeyword_11_2_0_1_0_0_1() { return cIKeyword_11_2_0_1_0_0_1; }
		
		//('When' 'I' 'do' 'not')
		public Group getGroup_11_2_0_1_0_1() { return cGroup_11_2_0_1_0_1; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_1_0_1_0() { return cWhenKeyword_11_2_0_1_0_1_0; }
		
		//'I'
		public Keyword getIKeyword_11_2_0_1_0_1_1() { return cIKeyword_11_2_0_1_0_1_1; }
		
		//'do'
		public Keyword getDoKeyword_11_2_0_1_0_1_2() { return cDoKeyword_11_2_0_1_0_1_2; }
		
		//'not'
		public Keyword getNotKeyword_11_2_0_1_0_1_3() { return cNotKeyword_11_2_0_1_0_1_3; }
		
		//('When' 'the')
		public Group getGroup_11_2_0_1_0_2() { return cGroup_11_2_0_1_0_2; }
		
		//'When'
		public Keyword getWhenKeyword_11_2_0_1_0_2_0() { return cWhenKeyword_11_2_0_1_0_2_0; }
		
		//'the'
		public Keyword getTheKeyword_11_2_0_1_0_2_1() { return cTheKeyword_11_2_0_1_0_2_1; }
		
		//('Given' 'I')
		public Group getGroup_11_2_0_1_0_3() { return cGroup_11_2_0_1_0_3; }
		
		//'Given'
		public Keyword getGivenKeyword_11_2_0_1_0_3_0() { return cGivenKeyword_11_2_0_1_0_3_0; }
		
		//'I'
		public Keyword getIKeyword_11_2_0_1_0_3_1() { return cIKeyword_11_2_0_1_0_3_1; }
		
		//actionE = ScenarioAction
		public Assignment getActionEAssignment_11_2_0_1_1() { return cActionEAssignment_11_2_0_1_1; }
		
		//ScenarioAction
		public RuleCall getActionEScenarioActionParserRuleCall_11_2_0_1_1_0() { return cActionEScenarioActionParserRuleCall_11_2_0_1_1_0; }
		
		//'which'
		public Keyword getWhichKeyword_11_2_1() { return cWhichKeyword_11_2_1; }
		
		//'means'
		public Keyword getMeansKeyword_11_2_2() { return cMeansKeyword_11_2_2; }
		
		//( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		// (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//'Given'
		public Keyword getGivenKeyword_11_3_0() { return cGivenKeyword_11_3_0; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_11_3_1() { return cAlternatives_11_3_1; }
		
		//'the'
		public Keyword getTheKeyword_11_3_1_0() { return cTheKeyword_11_3_1_0; }
		
		//'all' 'the'
		public Group getGroup_11_3_1_1() { return cGroup_11_3_1_1; }
		
		//'all'
		public Keyword getAllKeyword_11_3_1_1_0() { return cAllKeyword_11_3_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_3_1_1_1() { return cTheKeyword_11_3_1_1_1; }
		
		//preState1 = ScenarioState
		public Assignment getPreState1Assignment_11_3_2() { return cPreState1Assignment_11_3_2; }
		
		//ScenarioState
		public RuleCall getPreState1ScenarioStateParserRuleCall_11_3_2_0() { return cPreState1ScenarioStateParserRuleCall_11_3_2_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_11_3_3() { return cAlternatives_11_3_3; }
		
		//'out'
		public Keyword getOutKeyword_11_3_3_0() { return cOutKeyword_11_3_3_0; }
		
		//'off'
		public Keyword getOffKeyword_11_3_3_1() { return cOffKeyword_11_3_3_1; }
		
		//'on'
		public Keyword getOnKeyword_11_3_3_2() { return cOnKeyword_11_3_3_2; }
		
		//'in'
		public Keyword getInKeyword_11_3_3_3() { return cInKeyword_11_3_3_3; }
		
		//'to' 'the'
		public Group getGroup_11_3_3_4() { return cGroup_11_3_3_4; }
		
		//'to'
		public Keyword getToKeyword_11_3_3_4_0() { return cToKeyword_11_3_3_4_0; }
		
		//'the'
		public Keyword getTheKeyword_11_3_3_4_1() { return cTheKeyword_11_3_3_4_1; }
		
		//'to'
		public Keyword getToKeyword_11_3_3_5() { return cToKeyword_11_3_3_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?))
		public Alternatives getAlternatives_11_3_4() { return cAlternatives_11_3_4; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_4_0() { return cWORDParserRuleCall_11_3_4_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_11_3_4_1() { return cGroup_11_3_4_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_4_1_0() { return cWORDParserRuleCall_11_3_4_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_11_3_4_1_1() { return cAlternatives_11_3_4_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_3_4_1_1_0() { return cHyphenMinusKeyword_11_3_4_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_3_4_1_1_1() { return cTheKeyword_11_3_4_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_4_1_2() { return cWORDParserRuleCall_11_3_4_1_2; }
		
		//(WORD? 'in'? WORD?)
		public Group getGroup_11_3_4_2() { return cGroup_11_3_4_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_4_2_0() { return cWORDParserRuleCall_11_3_4_2_0; }
		
		//'in'?
		public Keyword getInKeyword_11_3_4_2_1() { return cInKeyword_11_3_4_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_4_2_2() { return cWORDParserRuleCall_11_3_4_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_3_5() { return cWORDParserRuleCall_11_3_5; }
		
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I'))
		public Alternatives getAlternatives_11_3_6() { return cAlternatives_11_3_6; }
		
		//('When' 'I')
		public Group getGroup_11_3_6_0() { return cGroup_11_3_6_0; }
		
		//'When'
		public Keyword getWhenKeyword_11_3_6_0_0() { return cWhenKeyword_11_3_6_0_0; }
		
		//'I'
		public Keyword getIKeyword_11_3_6_0_1() { return cIKeyword_11_3_6_0_1; }
		
		//('When' 'I' 'do' 'not')
		public Group getGroup_11_3_6_1() { return cGroup_11_3_6_1; }
		
		//'When'
		public Keyword getWhenKeyword_11_3_6_1_0() { return cWhenKeyword_11_3_6_1_0; }
		
		//'I'
		public Keyword getIKeyword_11_3_6_1_1() { return cIKeyword_11_3_6_1_1; }
		
		//'do'
		public Keyword getDoKeyword_11_3_6_1_2() { return cDoKeyword_11_3_6_1_2; }
		
		//'not'
		public Keyword getNotKeyword_11_3_6_1_3() { return cNotKeyword_11_3_6_1_3; }
		
		//('When' 'the')
		public Group getGroup_11_3_6_2() { return cGroup_11_3_6_2; }
		
		//'When'
		public Keyword getWhenKeyword_11_3_6_2_0() { return cWhenKeyword_11_3_6_2_0; }
		
		//'the'
		public Keyword getTheKeyword_11_3_6_2_1() { return cTheKeyword_11_3_6_2_1; }
		
		//('Given' 'I')
		public Group getGroup_11_3_6_3() { return cGroup_11_3_6_3; }
		
		//'Given'
		public Keyword getGivenKeyword_11_3_6_3_0() { return cGivenKeyword_11_3_6_3_0; }
		
		//'I'
		public Keyword getIKeyword_11_3_6_3_1() { return cIKeyword_11_3_6_3_1; }
		
		//action1 = ScenarioAction
		public Assignment getAction1Assignment_11_3_7() { return cAction1Assignment_11_3_7; }
		
		//ScenarioAction
		public RuleCall getAction1ScenarioActionParserRuleCall_11_3_7_0() { return cAction1ScenarioActionParserRuleCall_11_3_7_0; }
		
		//'Then'
		public Keyword getThenKeyword_11_4() { return cThenKeyword_11_4; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_11_5() { return cAlternatives_11_5; }
		
		//'the'
		public Keyword getTheKeyword_11_5_0() { return cTheKeyword_11_5_0; }
		
		//'all' 'the'
		public Group getGroup_11_5_1() { return cGroup_11_5_1; }
		
		//'all'
		public Keyword getAllKeyword_11_5_1_0() { return cAllKeyword_11_5_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_5_1_1() { return cTheKeyword_11_5_1_1; }
		
		//(STRING)?
		public RuleCall getSTRINGTerminalRuleCall_11_6() { return cSTRINGTerminalRuleCall_11_6; }
		
		//postState1 = ScenarioState
		public Assignment getPostState1Assignment_11_7() { return cPostState1Assignment_11_7; }
		
		//ScenarioState
		public RuleCall getPostState1ScenarioStateParserRuleCall_11_7_0() { return cPostState1ScenarioStateParserRuleCall_11_7_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_11_8() { return cAlternatives_11_8; }
		
		//'out'
		public Keyword getOutKeyword_11_8_0() { return cOutKeyword_11_8_0; }
		
		//'off'
		public Keyword getOffKeyword_11_8_1() { return cOffKeyword_11_8_1; }
		
		//'on'
		public Keyword getOnKeyword_11_8_2() { return cOnKeyword_11_8_2; }
		
		//'in'
		public Keyword getInKeyword_11_8_3() { return cInKeyword_11_8_3; }
		
		//'to' 'the'
		public Group getGroup_11_8_4() { return cGroup_11_8_4; }
		
		//'to'
		public Keyword getToKeyword_11_8_4_0() { return cToKeyword_11_8_4_0; }
		
		//'the'
		public Keyword getTheKeyword_11_8_4_1() { return cTheKeyword_11_8_4_1; }
		
		//'to'
		public Keyword getToKeyword_11_8_5() { return cToKeyword_11_8_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?))
		public Alternatives getAlternatives_11_9() { return cAlternatives_11_9; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_9_0() { return cWORDParserRuleCall_11_9_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_11_9_1() { return cGroup_11_9_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_9_1_0() { return cWORDParserRuleCall_11_9_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_11_9_1_1() { return cAlternatives_11_9_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_9_1_1_0() { return cHyphenMinusKeyword_11_9_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_11_9_1_1_1() { return cTheKeyword_11_9_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_9_1_2() { return cWORDParserRuleCall_11_9_1_2; }
		
		//(WORD? 'in' WORD?)
		public Group getGroup_11_9_2() { return cGroup_11_9_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_9_2_0() { return cWORDParserRuleCall_11_9_2_0; }
		
		//'in'
		public Keyword getInKeyword_11_9_2_1() { return cInKeyword_11_9_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_9_2_2() { return cWORDParserRuleCall_11_9_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_11_10() { return cWORDParserRuleCall_11_10; }
		
		//(((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
		//'which' 'means')?
		//('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
		//'Then' ('the'|'all' 'the')? (STRING)? postState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
		//)?
		public Group getGroup_12() { return cGroup_12; }
		
		//((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
		//       'which' 'means')?
		public Group getGroup_12_0() { return cGroup_12_0; }
		
		//(('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
		public Alternatives getAlternatives_12_0_0() { return cAlternatives_12_0_0; }
		
		//('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION))
		public Group getGroup_12_0_0_0() { return cGroup_12_0_0_0; }
		
		//('Then''the'|'Then''I'|'Then')
		public Alternatives getAlternatives_12_0_0_0_0() { return cAlternatives_12_0_0_0_0; }
		
		//'Then''the'
		public Group getGroup_12_0_0_0_0_0() { return cGroup_12_0_0_0_0_0; }
		
		//'Then'
		public Keyword getThenKeyword_12_0_0_0_0_0_0() { return cThenKeyword_12_0_0_0_0_0_0; }
		
		//'the'
		public Keyword getTheKeyword_12_0_0_0_0_0_1() { return cTheKeyword_12_0_0_0_0_0_1; }
		
		//'Then''I'
		public Group getGroup_12_0_0_0_0_1() { return cGroup_12_0_0_0_0_1; }
		
		//'Then'
		public Keyword getThenKeyword_12_0_0_0_0_1_0() { return cThenKeyword_12_0_0_0_0_1_0; }
		
		//'I'
		public Keyword getIKeyword_12_0_0_0_0_1_1() { return cIKeyword_12_0_0_0_0_1_1; }
		
		//'Then'
		public Keyword getThenKeyword_12_0_0_0_0_2() { return cThenKeyword_12_0_0_0_0_2; }
		
		//('do' 'not')?
		public Group getGroup_12_0_0_0_1() { return cGroup_12_0_0_0_1; }
		
		//'do'
		public Keyword getDoKeyword_12_0_0_0_1_0() { return cDoKeyword_12_0_0_0_1_0; }
		
		//'not'
		public Keyword getNotKeyword_12_0_0_0_1_1() { return cNotKeyword_12_0_0_0_1_1; }
		
		//((OPTION))
		public RuleCall getOPTIONParserRuleCall_12_0_0_0_2() { return cOPTIONParserRuleCall_12_0_0_0_2; }
		
		//('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState)
		public Group getGroup_12_0_0_1() { return cGroup_12_0_0_1; }
		
		//'Then'
		public Keyword getThenKeyword_12_0_0_1_0() { return cThenKeyword_12_0_0_1_0; }
		
		//('the'|'all' 'the'|'I')?
		public Alternatives getAlternatives_12_0_0_1_1() { return cAlternatives_12_0_0_1_1; }
		
		//'the'
		public Keyword getTheKeyword_12_0_0_1_1_0() { return cTheKeyword_12_0_0_1_1_0; }
		
		//'all' 'the'
		public Group getGroup_12_0_0_1_1_1() { return cGroup_12_0_0_1_1_1; }
		
		//'all'
		public Keyword getAllKeyword_12_0_0_1_1_1_0() { return cAllKeyword_12_0_0_1_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_12_0_0_1_1_1_1() { return cTheKeyword_12_0_0_1_1_1_1; }
		
		//'I'
		public Keyword getIKeyword_12_0_0_1_1_2() { return cIKeyword_12_0_0_1_1_2; }
		
		//('do' 'not')?
		public Group getGroup_12_0_0_1_2() { return cGroup_12_0_0_1_2; }
		
		//'do'
		public Keyword getDoKeyword_12_0_0_1_2_0() { return cDoKeyword_12_0_0_1_2_0; }
		
		//'not'
		public Keyword getNotKeyword_12_0_0_1_2_1() { return cNotKeyword_12_0_0_1_2_1; }
		
		//preStateE1 = ScenarioState
		public Assignment getPreStateE1Assignment_12_0_0_1_3() { return cPreStateE1Assignment_12_0_0_1_3; }
		
		//ScenarioState
		public RuleCall getPreStateE1ScenarioStateParserRuleCall_12_0_0_1_3_0() { return cPreStateE1ScenarioStateParserRuleCall_12_0_0_1_3_0; }
		
		//'which'
		public Keyword getWhichKeyword_12_0_1() { return cWhichKeyword_12_0_1; }
		
		//'means'
		public Keyword getMeansKeyword_12_0_2() { return cMeansKeyword_12_0_2; }
		
		//('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
		public Group getGroup_12_1() { return cGroup_12_1; }
		
		//'Given'
		public Keyword getGivenKeyword_12_1_0() { return cGivenKeyword_12_1_0; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_12_1_1() { return cAlternatives_12_1_1; }
		
		//'the'
		public Keyword getTheKeyword_12_1_1_0() { return cTheKeyword_12_1_1_0; }
		
		//'all' 'the'
		public Group getGroup_12_1_1_1() { return cGroup_12_1_1_1; }
		
		//'all'
		public Keyword getAllKeyword_12_1_1_1_0() { return cAllKeyword_12_1_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_12_1_1_1_1() { return cTheKeyword_12_1_1_1_1; }
		
		//preState2 = ScenarioState
		public Assignment getPreState2Assignment_12_1_2() { return cPreState2Assignment_12_1_2; }
		
		//ScenarioState
		public RuleCall getPreState2ScenarioStateParserRuleCall_12_1_2_0() { return cPreState2ScenarioStateParserRuleCall_12_1_2_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_12_1_3() { return cAlternatives_12_1_3; }
		
		//'out'
		public Keyword getOutKeyword_12_1_3_0() { return cOutKeyword_12_1_3_0; }
		
		//'off'
		public Keyword getOffKeyword_12_1_3_1() { return cOffKeyword_12_1_3_1; }
		
		//'on'
		public Keyword getOnKeyword_12_1_3_2() { return cOnKeyword_12_1_3_2; }
		
		//'in'
		public Keyword getInKeyword_12_1_3_3() { return cInKeyword_12_1_3_3; }
		
		//'to' 'the'
		public Group getGroup_12_1_3_4() { return cGroup_12_1_3_4; }
		
		//'to'
		public Keyword getToKeyword_12_1_3_4_0() { return cToKeyword_12_1_3_4_0; }
		
		//'the'
		public Keyword getTheKeyword_12_1_3_4_1() { return cTheKeyword_12_1_3_4_1; }
		
		//'to'
		public Keyword getToKeyword_12_1_3_5() { return cToKeyword_12_1_3_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?))
		public Alternatives getAlternatives_12_1_4() { return cAlternatives_12_1_4; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_4_0() { return cWORDParserRuleCall_12_1_4_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_12_1_4_1() { return cGroup_12_1_4_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_4_1_0() { return cWORDParserRuleCall_12_1_4_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_12_1_4_1_1() { return cAlternatives_12_1_4_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_1_4_1_1_0() { return cHyphenMinusKeyword_12_1_4_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_12_1_4_1_1_1() { return cTheKeyword_12_1_4_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_4_1_2() { return cWORDParserRuleCall_12_1_4_1_2; }
		
		//(WORD? 'in'? WORD?)
		public Group getGroup_12_1_4_2() { return cGroup_12_1_4_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_4_2_0() { return cWORDParserRuleCall_12_1_4_2_0; }
		
		//'in'?
		public Keyword getInKeyword_12_1_4_2_1() { return cInKeyword_12_1_4_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_4_2_2() { return cWORDParserRuleCall_12_1_4_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_1_5() { return cWORDParserRuleCall_12_1_5; }
		
		//(('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I'))
		public Alternatives getAlternatives_12_1_6() { return cAlternatives_12_1_6; }
		
		//('When' 'I')
		public Group getGroup_12_1_6_0() { return cGroup_12_1_6_0; }
		
		//'When'
		public Keyword getWhenKeyword_12_1_6_0_0() { return cWhenKeyword_12_1_6_0_0; }
		
		//'I'
		public Keyword getIKeyword_12_1_6_0_1() { return cIKeyword_12_1_6_0_1; }
		
		//('When' 'I' 'do' 'not')
		public Group getGroup_12_1_6_1() { return cGroup_12_1_6_1; }
		
		//'When'
		public Keyword getWhenKeyword_12_1_6_1_0() { return cWhenKeyword_12_1_6_1_0; }
		
		//'I'
		public Keyword getIKeyword_12_1_6_1_1() { return cIKeyword_12_1_6_1_1; }
		
		//'do'
		public Keyword getDoKeyword_12_1_6_1_2() { return cDoKeyword_12_1_6_1_2; }
		
		//'not'
		public Keyword getNotKeyword_12_1_6_1_3() { return cNotKeyword_12_1_6_1_3; }
		
		//('When' 'the')
		public Group getGroup_12_1_6_2() { return cGroup_12_1_6_2; }
		
		//'When'
		public Keyword getWhenKeyword_12_1_6_2_0() { return cWhenKeyword_12_1_6_2_0; }
		
		//'the'
		public Keyword getTheKeyword_12_1_6_2_1() { return cTheKeyword_12_1_6_2_1; }
		
		//('Given' 'I')
		public Group getGroup_12_1_6_3() { return cGroup_12_1_6_3; }
		
		//'Given'
		public Keyword getGivenKeyword_12_1_6_3_0() { return cGivenKeyword_12_1_6_3_0; }
		
		//'I'
		public Keyword getIKeyword_12_1_6_3_1() { return cIKeyword_12_1_6_3_1; }
		
		//action2 = ScenarioAction
		public Assignment getAction2Assignment_12_1_7() { return cAction2Assignment_12_1_7; }
		
		//ScenarioAction
		public RuleCall getAction2ScenarioActionParserRuleCall_12_1_7_0() { return cAction2ScenarioActionParserRuleCall_12_1_7_0; }
		
		//'Then'
		public Keyword getThenKeyword_12_2() { return cThenKeyword_12_2; }
		
		//('the'|'all' 'the')?
		public Alternatives getAlternatives_12_3() { return cAlternatives_12_3; }
		
		//'the'
		public Keyword getTheKeyword_12_3_0() { return cTheKeyword_12_3_0; }
		
		//'all' 'the'
		public Group getGroup_12_3_1() { return cGroup_12_3_1; }
		
		//'all'
		public Keyword getAllKeyword_12_3_1_0() { return cAllKeyword_12_3_1_0; }
		
		//'the'
		public Keyword getTheKeyword_12_3_1_1() { return cTheKeyword_12_3_1_1; }
		
		//(STRING)?
		public RuleCall getSTRINGTerminalRuleCall_12_4() { return cSTRINGTerminalRuleCall_12_4; }
		
		//postState2 = ScenarioState
		public Assignment getPostState2Assignment_12_5() { return cPostState2Assignment_12_5; }
		
		//ScenarioState
		public RuleCall getPostState2ScenarioStateParserRuleCall_12_5_0() { return cPostState2ScenarioStateParserRuleCall_12_5_0; }
		
		//('out'|'off'|'on'|'in'|'to' 'the'|'to')?
		public Alternatives getAlternatives_12_6() { return cAlternatives_12_6; }
		
		//'out'
		public Keyword getOutKeyword_12_6_0() { return cOutKeyword_12_6_0; }
		
		//'off'
		public Keyword getOffKeyword_12_6_1() { return cOffKeyword_12_6_1; }
		
		//'on'
		public Keyword getOnKeyword_12_6_2() { return cOnKeyword_12_6_2; }
		
		//'in'
		public Keyword getInKeyword_12_6_3() { return cInKeyword_12_6_3; }
		
		//'to' 'the'
		public Group getGroup_12_6_4() { return cGroup_12_6_4; }
		
		//'to'
		public Keyword getToKeyword_12_6_4_0() { return cToKeyword_12_6_4_0; }
		
		//'the'
		public Keyword getTheKeyword_12_6_4_1() { return cTheKeyword_12_6_4_1; }
		
		//'to'
		public Keyword getToKeyword_12_6_5() { return cToKeyword_12_6_5; }
		
		//(WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?))
		public Alternatives getAlternatives_12_7() { return cAlternatives_12_7; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_7_0() { return cWORDParserRuleCall_12_7_0; }
		
		//WORD?('-'|'the')?WORD?
		public Group getGroup_12_7_1() { return cGroup_12_7_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_7_1_0() { return cWORDParserRuleCall_12_7_1_0; }
		
		//('-'|'the')?
		public Alternatives getAlternatives_12_7_1_1() { return cAlternatives_12_7_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_7_1_1_0() { return cHyphenMinusKeyword_12_7_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_12_7_1_1_1() { return cTheKeyword_12_7_1_1_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_7_1_2() { return cWORDParserRuleCall_12_7_1_2; }
		
		//(WORD? 'in' WORD?)
		public Group getGroup_12_7_2() { return cGroup_12_7_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_7_2_0() { return cWORDParserRuleCall_12_7_2_0; }
		
		//'in'
		public Keyword getInKeyword_12_7_2_1() { return cInKeyword_12_7_2_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_7_2_2() { return cWORDParserRuleCall_12_7_2_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_12_8() { return cWORDParserRuleCall_12_8; }
	}
	public class ScenarioStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ScenarioState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStatesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStatesStatePhraseParserRuleCall_0_0 = (RuleCall)cStatesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cAndKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cAndKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Keyword cTheKeyword_1_0_1_1 = (Keyword)cGroup_1_0_1.eContents().get(1);
		private final Assignment cStatesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cStatesStatePhraseParserRuleCall_1_1_0 = (RuleCall)cStatesAssignment_1_1.eContents().get(0);
		
		//ScenarioState:
		//    states += StatePhrase (('And'|'And' 'the') states += StatePhrase)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//states += StatePhrase (('And'|'And' 'the') states += StatePhrase)*
		public Group getGroup() { return cGroup; }
		
		//states += StatePhrase
		public Assignment getStatesAssignment_0() { return cStatesAssignment_0; }
		
		//StatePhrase
		public RuleCall getStatesStatePhraseParserRuleCall_0_0() { return cStatesStatePhraseParserRuleCall_0_0; }
		
		//(('And'|'And' 'the') states += StatePhrase)*
		public Group getGroup_1() { return cGroup_1; }
		
		//('And'|'And' 'the')
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'And'
		public Keyword getAndKeyword_1_0_0() { return cAndKeyword_1_0_0; }
		
		//'And' 'the'
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'And'
		public Keyword getAndKeyword_1_0_1_0() { return cAndKeyword_1_0_1_0; }
		
		//'the'
		public Keyword getTheKeyword_1_0_1_1() { return cTheKeyword_1_0_1_1; }
		
		//states += StatePhrase
		public Assignment getStatesAssignment_1_1() { return cStatesAssignment_1_1; }
		
		//StatePhrase
		public RuleCall getStatesStatePhraseParserRuleCall_1_1_0() { return cStatesStatePhraseParserRuleCall_1_1_0; }
	}
	public class ScenarioActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ScenarioAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cActionsActionPhraseParserRuleCall_0_0 = (RuleCall)cActionsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cAndKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Keyword cIKeyword_1_0_0_1 = (Keyword)cGroup_1_0_0.eContents().get(1);
		private final Keyword cAndKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cActionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cActionsActionPhraseParserRuleCall_1_1_0 = (RuleCall)cActionsAssignment_1_1.eContents().get(0);
		
		//ScenarioAction:
		//    actions += ActionPhrase (('And' 'I'|'And') actions += ActionPhrase)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//actions += ActionPhrase (('And' 'I'|'And') actions += ActionPhrase)*
		public Group getGroup() { return cGroup; }
		
		//actions += ActionPhrase
		public Assignment getActionsAssignment_0() { return cActionsAssignment_0; }
		
		//ActionPhrase
		public RuleCall getActionsActionPhraseParserRuleCall_0_0() { return cActionsActionPhraseParserRuleCall_0_0; }
		
		//(('And' 'I'|'And') actions += ActionPhrase)*
		public Group getGroup_1() { return cGroup_1; }
		
		//('And' 'I'|'And')
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'And' 'I'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'And'
		public Keyword getAndKeyword_1_0_0_0() { return cAndKeyword_1_0_0_0; }
		
		//'I'
		public Keyword getIKeyword_1_0_0_1() { return cIKeyword_1_0_0_1; }
		
		//'And'
		public Keyword getAndKeyword_1_0_1() { return cAndKeyword_1_0_1; }
		
		//actions += ActionPhrase
		public Assignment getActionsAssignment_1_1() { return cActionsAssignment_1_1; }
		
		//ActionPhrase
		public RuleCall getActionsActionPhraseParserRuleCall_1_1_0() { return cActionsActionPhraseParserRuleCall_1_1_0; }
	}
	public class StatePhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.StatePhrase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScenarioRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityPropertyStatePhraseParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEntityStatePhraseParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//StatePhrase: ScenarioRef | EntityPropertyStatePhrase | EntityStatePhrase;
		@Override public ParserRule getRule() { return rule; }
		
		//ScenarioRef | EntityPropertyStatePhrase | EntityStatePhrase
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ScenarioRef
		public RuleCall getScenarioRefParserRuleCall_0() { return cScenarioRefParserRuleCall_0; }
		
		//EntityPropertyStatePhrase
		public RuleCall getEntityPropertyStatePhraseParserRuleCall_1() { return cEntityPropertyStatePhraseParserRuleCall_1; }
		
		//EntityStatePhrase
		public RuleCall getEntityStatePhraseParserRuleCall_2() { return cEntityStatePhraseParserRuleCall_2; }
	}
	public class ScenarioRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ScenarioRef");
		private final Assignment cScenarioRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cScenarioRefScenarioCrossReference_0 = (CrossReference)cScenarioRefAssignment.eContents().get(0);
		private final RuleCall cScenarioRefScenarioID_OR_STRINGParserRuleCall_0_1 = (RuleCall)cScenarioRefScenarioCrossReference_0.eContents().get(1);
		
		//ScenarioRef:
		//    scenarioRef = [Scenario | ID_OR_STRING]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//scenarioRef = [Scenario | ID_OR_STRING]
		public Assignment getScenarioRefAssignment() { return cScenarioRefAssignment; }
		
		//[Scenario | ID_OR_STRING]
		public CrossReference getScenarioRefScenarioCrossReference_0() { return cScenarioRefScenarioCrossReference_0; }
		
		//ID_OR_STRING
		public RuleCall getScenarioRefScenarioID_OR_STRINGParserRuleCall_0_1() { return cScenarioRefScenarioID_OR_STRINGParserRuleCall_0_1; }
	}
	public class ENTITY_IDENTITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ENTITY_IDENTITY");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		////ENTITY_IDENTITY: '#'? (INT | STRING);
		//ENTITY_IDENTITY: '#'? (INT | STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//'#'? (INT | STRING)
		public Group getGroup() { return cGroup; }
		
		//'#'?
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }
		
		//(INT | STRING)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1_0() { return cINTTerminalRuleCall_1_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_1() { return cSTRINGTerminalRuleCall_1_1; }
	}
	public class OPTIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.OPTION");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//OPTION:'#'? (INT | STRING) ;
		@Override public ParserRule getRule() { return rule; }
		
		//'#'? (INT | STRING)
		public Group getGroup() { return cGroup; }
		
		//'#'?
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }
		
		//(INT | STRING)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1_0() { return cINTTerminalRuleCall_1_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_1() { return cSTRINGTerminalRuleCall_1_1; }
	}
	public class EntityRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.EntityRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final RuleCall cOPTIONParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cForKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Keyword cTheKeyword_0_0_3 = (Keyword)cGroup_0_0.eContents().get(3);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cForKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cOfKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_0_2_0 = (Alternatives)cGroup_0_2.eContents().get(0);
		private final Keyword cTheKeyword_0_2_0_0 = (Keyword)cAlternatives_0_2_0.eContents().get(0);
		private final Group cGroup_0_2_0_1 = (Group)cAlternatives_0_2_0.eContents().get(1);
		private final Keyword cAllKeyword_0_2_0_1_0 = (Keyword)cGroup_0_2_0_1.eContents().get(0);
		private final Keyword cTheKeyword_0_2_0_1_1 = (Keyword)cGroup_0_2_0_1.eContents().get(1);
		private final Assignment cEntityAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final CrossReference cEntityEntityDefCrossReference_0_2_1_0 = (CrossReference)cEntityAssignment_0_2_1.eContents().get(0);
		private final RuleCall cEntityEntityDefWORDParserRuleCall_0_2_1_0_1 = (RuleCall)cEntityEntityDefCrossReference_0_2_1_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cNameENTITY_IDENTITYParserRuleCall_0_2_2_0 = (RuleCall)cNameAssignment_0_2_2.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNameENTITY_IDENTITYParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//EntityRef:
		//     (WORD OPTION 'for' 'the')? ('for'|'of')? (('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY) | (name = ENTITY_IDENTITY)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(WORD OPTION 'for' 'the')? ('for'|'of')? (('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY) | (name = ENTITY_IDENTITY)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(WORD OPTION 'for' 'the')? ('for'|'of')? (('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY)
		public Group getGroup_0() { return cGroup_0; }
		
		//(WORD OPTION 'for' 'the')?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_0_0_0() { return cWORDParserRuleCall_0_0_0; }
		
		//OPTION
		public RuleCall getOPTIONParserRuleCall_0_0_1() { return cOPTIONParserRuleCall_0_0_1; }
		
		//'for'
		public Keyword getForKeyword_0_0_2() { return cForKeyword_0_0_2; }
		
		//'the'
		public Keyword getTheKeyword_0_0_3() { return cTheKeyword_0_0_3; }
		
		//('for'|'of')?
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//'for'
		public Keyword getForKeyword_0_1_0() { return cForKeyword_0_1_0; }
		
		//'of'
		public Keyword getOfKeyword_0_1_1() { return cOfKeyword_0_1_1; }
		
		//(('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY)
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//('the'|'all' 'the')
		public Alternatives getAlternatives_0_2_0() { return cAlternatives_0_2_0; }
		
		//'the'
		public Keyword getTheKeyword_0_2_0_0() { return cTheKeyword_0_2_0_0; }
		
		//'all' 'the'
		public Group getGroup_0_2_0_1() { return cGroup_0_2_0_1; }
		
		//'all'
		public Keyword getAllKeyword_0_2_0_1_0() { return cAllKeyword_0_2_0_1_0; }
		
		//'the'
		public Keyword getTheKeyword_0_2_0_1_1() { return cTheKeyword_0_2_0_1_1; }
		
		//entity = [EntityDef | WORD]
		public Assignment getEntityAssignment_0_2_1() { return cEntityAssignment_0_2_1; }
		
		//[EntityDef | WORD]
		public CrossReference getEntityEntityDefCrossReference_0_2_1_0() { return cEntityEntityDefCrossReference_0_2_1_0; }
		
		//WORD
		public RuleCall getEntityEntityDefWORDParserRuleCall_0_2_1_0_1() { return cEntityEntityDefWORDParserRuleCall_0_2_1_0_1; }
		
		//name = ENTITY_IDENTITY
		public Assignment getNameAssignment_0_2_2() { return cNameAssignment_0_2_2; }
		
		//ENTITY_IDENTITY
		public RuleCall getNameENTITY_IDENTITYParserRuleCall_0_2_2_0() { return cNameENTITY_IDENTITYParserRuleCall_0_2_2_0; }
		
		//(name = ENTITY_IDENTITY)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ENTITY_IDENTITY
		public RuleCall getNameENTITY_IDENTITYParserRuleCall_1_0() { return cNameENTITY_IDENTITYParserRuleCall_1_0; }
	}
	public class EntityStatePhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.EntityStatePhrase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cPropertyAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cPropertyPropertyDefCrossReference_0_0_0 = (CrossReference)cPropertyAssignment_0_0.eContents().get(0);
		private final RuleCall cPropertyPropertyDefWORDParserRuleCall_0_0_0_1 = (RuleCall)cPropertyPropertyDefCrossReference_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cOfKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cAlternatives_0_1.eContents().get(1);
		private final Keyword cOfKeyword_0_1_1_0 = (Keyword)cGroup_0_1_1.eContents().get(0);
		private final Keyword cTheKeyword_0_1_1_1 = (Keyword)cGroup_0_1_1.eContents().get(1);
		private final RuleCall cOPTIONParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_0_3 = (Alternatives)cGroup_0.eContents().get(3);
		private final Keyword cForKeyword_0_3_0 = (Keyword)cAlternatives_0_3.eContents().get(0);
		private final Group cGroup_0_3_1 = (Group)cAlternatives_0_3.eContents().get(1);
		private final Keyword cForKeyword_0_3_1_0 = (Keyword)cGroup_0_3_1.eContents().get(0);
		private final Keyword cTheKeyword_0_3_1_1 = (Keyword)cGroup_0_3_1.eContents().get(1);
		private final Alternatives cAlternatives_0_4 = (Alternatives)cGroup_0.eContents().get(4);
		private final Keyword cOfKeyword_0_4_0 = (Keyword)cAlternatives_0_4.eContents().get(0);
		private final Group cGroup_0_4_1 = (Group)cAlternatives_0_4.eContents().get(1);
		private final Keyword cOfKeyword_0_4_1_0 = (Keyword)cGroup_0_4_1.eContents().get(0);
		private final Keyword cTheKeyword_0_4_1_1 = (Keyword)cGroup_0_4_1.eContents().get(1);
		private final Group cGroup_0_4_2 = (Group)cAlternatives_0_4.eContents().get(2);
		private final Keyword cForKeyword_0_4_2_0 = (Keyword)cGroup_0_4_2.eContents().get(0);
		private final Keyword cTheKeyword_0_4_2_1 = (Keyword)cGroup_0_4_2.eContents().get(1);
		private final Keyword cForKeyword_0_4_3 = (Keyword)cAlternatives_0_4.eContents().get(3);
		private final Assignment cEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntityEntityRefParserRuleCall_1_0 = (RuleCall)cEntityAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cIsKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cAreKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cNotKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStateAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cStateStateNameCrossReference_4_0 = (CrossReference)cStateAssignment_4.eContents().get(0);
		private final RuleCall cStateStateNameIDTerminalRuleCall_4_0_1 = (RuleCall)cStateStateNameCrossReference_4_0.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//EntityStatePhrase:
		//    (property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('for'|'for' 'the')? ('of'|'of' 'the'|'for' 'the'|'for'))?
		//    entity = EntityRef ('is'|'are') 'not'? state = [StateName] WORD?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('for'|'for' 'the')? ('of'|'of' 'the'|'for' 'the'|'for'))?
		//entity = EntityRef ('is'|'are') 'not'? state = [StateName] WORD?
		public Group getGroup() { return cGroup; }
		
		//(property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('for'|'for' 'the')? ('of'|'of' 'the'|'for' 'the'|'for'))?
		public Group getGroup_0() { return cGroup_0; }
		
		//property = [PropertyDef | WORD]?
		public Assignment getPropertyAssignment_0_0() { return cPropertyAssignment_0_0; }
		
		//[PropertyDef | WORD]
		public CrossReference getPropertyPropertyDefCrossReference_0_0_0() { return cPropertyPropertyDefCrossReference_0_0_0; }
		
		//WORD
		public RuleCall getPropertyPropertyDefWORDParserRuleCall_0_0_0_1() { return cPropertyPropertyDefWORDParserRuleCall_0_0_0_1; }
		
		//('of'|'of' 'the')?
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//'of'
		public Keyword getOfKeyword_0_1_0() { return cOfKeyword_0_1_0; }
		
		//'of' 'the'
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//'of'
		public Keyword getOfKeyword_0_1_1_0() { return cOfKeyword_0_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_0_1_1_1() { return cTheKeyword_0_1_1_1; }
		
		//OPTION?
		public RuleCall getOPTIONParserRuleCall_0_2() { return cOPTIONParserRuleCall_0_2; }
		
		//('for'|'for' 'the')?
		public Alternatives getAlternatives_0_3() { return cAlternatives_0_3; }
		
		//'for'
		public Keyword getForKeyword_0_3_0() { return cForKeyword_0_3_0; }
		
		//'for' 'the'
		public Group getGroup_0_3_1() { return cGroup_0_3_1; }
		
		//'for'
		public Keyword getForKeyword_0_3_1_0() { return cForKeyword_0_3_1_0; }
		
		//'the'
		public Keyword getTheKeyword_0_3_1_1() { return cTheKeyword_0_3_1_1; }
		
		//('of'|'of' 'the'|'for' 'the'|'for')
		public Alternatives getAlternatives_0_4() { return cAlternatives_0_4; }
		
		//'of'
		public Keyword getOfKeyword_0_4_0() { return cOfKeyword_0_4_0; }
		
		//'of' 'the'
		public Group getGroup_0_4_1() { return cGroup_0_4_1; }
		
		//'of'
		public Keyword getOfKeyword_0_4_1_0() { return cOfKeyword_0_4_1_0; }
		
		//'the'
		public Keyword getTheKeyword_0_4_1_1() { return cTheKeyword_0_4_1_1; }
		
		//'for' 'the'
		public Group getGroup_0_4_2() { return cGroup_0_4_2; }
		
		//'for'
		public Keyword getForKeyword_0_4_2_0() { return cForKeyword_0_4_2_0; }
		
		//'the'
		public Keyword getTheKeyword_0_4_2_1() { return cTheKeyword_0_4_2_1; }
		
		//'for'
		public Keyword getForKeyword_0_4_3() { return cForKeyword_0_4_3; }
		
		//entity = EntityRef
		public Assignment getEntityAssignment_1() { return cEntityAssignment_1; }
		
		//EntityRef
		public RuleCall getEntityEntityRefParserRuleCall_1_0() { return cEntityEntityRefParserRuleCall_1_0; }
		
		//('is'|'are')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'is'
		public Keyword getIsKeyword_2_0() { return cIsKeyword_2_0; }
		
		//'are'
		public Keyword getAreKeyword_2_1() { return cAreKeyword_2_1; }
		
		//'not'?
		public Keyword getNotKeyword_3() { return cNotKeyword_3; }
		
		//state = [StateName]
		public Assignment getStateAssignment_4() { return cStateAssignment_4; }
		
		//[StateName]
		public CrossReference getStateStateNameCrossReference_4_0() { return cStateStateNameCrossReference_4_0; }
		
		//ID
		public RuleCall getStateStateNameIDTerminalRuleCall_4_0_1() { return cStateStateNameIDTerminalRuleCall_4_0_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5() { return cWORDParserRuleCall_5; }
	}
	public class EntityPropertyStatePhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.EntityPropertyStatePhrase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPropertyPropertyDefCrossReference_0_0 = (CrossReference)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cPropertyPropertyDefWORDParserRuleCall_0_0_1 = (RuleCall)cPropertyPropertyDefCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cOfKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cTheKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final RuleCall cOPTIONParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cOfKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cForKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Keyword cFromKeyword_3_2 = (Keyword)cAlternatives_3.eContents().get(2);
		private final Group cGroup_3_3 = (Group)cAlternatives_3.eContents().get(3);
		private final Keyword cForKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cTheKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Group cGroup_3_4 = (Group)cAlternatives_3.eContents().get(4);
		private final Keyword cOfKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cTheKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntityEntityRefParserRuleCall_4_0 = (RuleCall)cEntityAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_0_0 = (Alternatives)cGroup_5_0_0.eContents().get(0);
		private final Keyword cIsKeyword_5_0_0_0_0 = (Keyword)cAlternatives_5_0_0_0.eContents().get(0);
		private final Group cGroup_5_0_0_0_1 = (Group)cAlternatives_5_0_0_0.eContents().get(1);
		private final Keyword cIsKeyword_5_0_0_0_1_0 = (Keyword)cGroup_5_0_0_0_1.eContents().get(0);
		private final Keyword cNotKeyword_5_0_0_0_1_1 = (Keyword)cGroup_5_0_0_0_1.eContents().get(1);
		private final Assignment cValueAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final RuleCall cValuePropertyValueParserRuleCall_5_0_0_1_0 = (RuleCall)cValueAssignment_5_0_0_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_5_0_0_2 = (RuleCall)cGroup_5_0_0.eContents().get(2);
		private final RuleCall cWORDParserRuleCall_5_0_1 = (RuleCall)cGroup_5_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Alternatives cAlternatives_5_1_0 = (Alternatives)cGroup_5_1.eContents().get(0);
		private final Group cGroup_5_1_0_0 = (Group)cAlternatives_5_1_0.eContents().get(0);
		private final Alternatives cAlternatives_5_1_0_0_0 = (Alternatives)cGroup_5_1_0_0.eContents().get(0);
		private final Keyword cAreKeyword_5_1_0_0_0_0 = (Keyword)cAlternatives_5_1_0_0_0.eContents().get(0);
		private final Group cGroup_5_1_0_0_0_1 = (Group)cAlternatives_5_1_0_0_0.eContents().get(1);
		private final Keyword cAreKeyword_5_1_0_0_0_1_0 = (Keyword)cGroup_5_1_0_0_0_1.eContents().get(0);
		private final Keyword cNotKeyword_5_1_0_0_0_1_1 = (Keyword)cGroup_5_1_0_0_0_1.eContents().get(1);
		private final Assignment cValuesAssignment_5_1_0_0_1 = (Assignment)cGroup_5_1_0_0.eContents().get(1);
		private final RuleCall cValuesPropertyValueParserRuleCall_5_1_0_0_1_0 = (RuleCall)cValuesAssignment_5_1_0_0_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_5_1_0_0_2 = (RuleCall)cGroup_5_1_0_0.eContents().get(2);
		private final Group cGroup_5_1_0_1 = (Group)cAlternatives_5_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0_1_0 = (Keyword)cGroup_5_1_0_1.eContents().get(0);
		private final Assignment cValuesAssignment_5_1_0_1_1 = (Assignment)cGroup_5_1_0_1.eContents().get(1);
		private final RuleCall cValuesPropertyValueParserRuleCall_5_1_0_1_1_0 = (RuleCall)cValuesAssignment_5_1_0_1_1.eContents().get(0);
		private final RuleCall cWORDParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		
		//EntityPropertyStatePhrase:
		//     property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('of'|'for' |'from'|'for' 'the'|'of' 'the')  entity = EntityRef
		//    ((('is'|'is' 'not') value = PropertyValue WORD?) WORD? | (('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('of'|'for' |'from'|'for' 'the'|'of' 'the')  entity = EntityRef
		//((('is'|'is' 'not') value = PropertyValue WORD?) WORD? | (('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?)
		public Group getGroup() { return cGroup; }
		
		//property = [PropertyDef | WORD]?
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }
		
		//[PropertyDef | WORD]
		public CrossReference getPropertyPropertyDefCrossReference_0_0() { return cPropertyPropertyDefCrossReference_0_0; }
		
		//WORD
		public RuleCall getPropertyPropertyDefWORDParserRuleCall_0_0_1() { return cPropertyPropertyDefWORDParserRuleCall_0_0_1; }
		
		//('of'|'of' 'the')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'of'
		public Keyword getOfKeyword_1_0() { return cOfKeyword_1_0; }
		
		//'of' 'the'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'of'
		public Keyword getOfKeyword_1_1_0() { return cOfKeyword_1_1_0; }
		
		//'the'
		public Keyword getTheKeyword_1_1_1() { return cTheKeyword_1_1_1; }
		
		//OPTION?
		public RuleCall getOPTIONParserRuleCall_2() { return cOPTIONParserRuleCall_2; }
		
		//('of'|'for' |'from'|'for' 'the'|'of' 'the')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'of'
		public Keyword getOfKeyword_3_0() { return cOfKeyword_3_0; }
		
		//'for'
		public Keyword getForKeyword_3_1() { return cForKeyword_3_1; }
		
		//'from'
		public Keyword getFromKeyword_3_2() { return cFromKeyword_3_2; }
		
		//'for' 'the'
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'for'
		public Keyword getForKeyword_3_3_0() { return cForKeyword_3_3_0; }
		
		//'the'
		public Keyword getTheKeyword_3_3_1() { return cTheKeyword_3_3_1; }
		
		//'of' 'the'
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'of'
		public Keyword getOfKeyword_3_4_0() { return cOfKeyword_3_4_0; }
		
		//'the'
		public Keyword getTheKeyword_3_4_1() { return cTheKeyword_3_4_1; }
		
		//entity = EntityRef
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }
		
		//EntityRef
		public RuleCall getEntityEntityRefParserRuleCall_4_0() { return cEntityEntityRefParserRuleCall_4_0; }
		
		//((('is'|'is' 'not') value = PropertyValue WORD?) WORD? | (('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?)
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//(('is'|'is' 'not') value = PropertyValue WORD?) WORD?
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//(('is'|'is' 'not') value = PropertyValue WORD?)
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }
		
		//('is'|'is' 'not')
		public Alternatives getAlternatives_5_0_0_0() { return cAlternatives_5_0_0_0; }
		
		//'is'
		public Keyword getIsKeyword_5_0_0_0_0() { return cIsKeyword_5_0_0_0_0; }
		
		//'is' 'not'
		public Group getGroup_5_0_0_0_1() { return cGroup_5_0_0_0_1; }
		
		//'is'
		public Keyword getIsKeyword_5_0_0_0_1_0() { return cIsKeyword_5_0_0_0_1_0; }
		
		//'not'
		public Keyword getNotKeyword_5_0_0_0_1_1() { return cNotKeyword_5_0_0_0_1_1; }
		
		//value = PropertyValue
		public Assignment getValueAssignment_5_0_0_1() { return cValueAssignment_5_0_0_1; }
		
		//PropertyValue
		public RuleCall getValuePropertyValueParserRuleCall_5_0_0_1_0() { return cValuePropertyValueParserRuleCall_5_0_0_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5_0_0_2() { return cWORDParserRuleCall_5_0_0_2; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5_0_1() { return cWORDParserRuleCall_5_0_1; }
		
		//(('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//(('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*)
		public Alternatives getAlternatives_5_1_0() { return cAlternatives_5_1_0; }
		
		//('are'|'are' 'not') (values += PropertyValue) WORD?
		public Group getGroup_5_1_0_0() { return cGroup_5_1_0_0; }
		
		//('are'|'are' 'not')
		public Alternatives getAlternatives_5_1_0_0_0() { return cAlternatives_5_1_0_0_0; }
		
		//'are'
		public Keyword getAreKeyword_5_1_0_0_0_0() { return cAreKeyword_5_1_0_0_0_0; }
		
		//'are' 'not'
		public Group getGroup_5_1_0_0_0_1() { return cGroup_5_1_0_0_0_1; }
		
		//'are'
		public Keyword getAreKeyword_5_1_0_0_0_1_0() { return cAreKeyword_5_1_0_0_0_1_0; }
		
		//'not'
		public Keyword getNotKeyword_5_1_0_0_0_1_1() { return cNotKeyword_5_1_0_0_0_1_1; }
		
		//(values += PropertyValue)
		public Assignment getValuesAssignment_5_1_0_0_1() { return cValuesAssignment_5_1_0_0_1; }
		
		//PropertyValue
		public RuleCall getValuesPropertyValueParserRuleCall_5_1_0_0_1_0() { return cValuesPropertyValueParserRuleCall_5_1_0_0_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5_1_0_0_2() { return cWORDParserRuleCall_5_1_0_0_2; }
		
		//(',' values += PropertyValue)*
		public Group getGroup_5_1_0_1() { return cGroup_5_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_5_1_0_1_0() { return cCommaKeyword_5_1_0_1_0; }
		
		//values += PropertyValue
		public Assignment getValuesAssignment_5_1_0_1_1() { return cValuesAssignment_5_1_0_1_1; }
		
		//PropertyValue
		public RuleCall getValuesPropertyValueParserRuleCall_5_1_0_1_1_0() { return cValuesPropertyValueParserRuleCall_5_1_0_1_1_0; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_5_1_1() { return cWORDParserRuleCall_5_1_1; }
	}
	public class PropertyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.PropertyValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSetValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////terminal UNCLOSED_STRING : '"' (!'"')* EOF;
		//PropertyValue: SimpleValue | ListValue | SetValue;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleValue | ListValue | SetValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleValue
		public RuleCall getSimpleValueParserRuleCall_0() { return cSimpleValueParserRuleCall_0; }
		
		//ListValue
		public RuleCall getListValueParserRuleCall_1() { return cListValueParserRuleCall_1; }
		
		//SetValue
		public RuleCall getSetValueParserRuleCall_2() { return cSetValueParserRuleCall_2; }
	}
	public class SimpleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.SimpleValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//SimpleValue: IntValue | BooleanValue | StringValue;
		@Override public ParserRule getRule() { return rule; }
		
		//IntValue | BooleanValue | StringValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntValue
		public RuleCall getIntValueParserRuleCall_0() { return cIntValueParserRuleCall_0; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_1() { return cBooleanValueParserRuleCall_1; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_2() { return cStringValueParserRuleCall_2; }
	}
	public class ListValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ListValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValuesSimpleValueParserRuleCall_2_0_0 = (RuleCall)cValuesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValuesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuesSimpleValueParserRuleCall_2_1_1_0 = (RuleCall)cValuesAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ListValue:
		//    {ListValue} '[' (values += SimpleValue (',' values += SimpleValue)*)? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ListValue} '[' (values += SimpleValue (',' values += SimpleValue)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{ListValue}
		public Action getListValueAction_0() { return cListValueAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(values += SimpleValue (',' values += SimpleValue)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//values += SimpleValue
		public Assignment getValuesAssignment_2_0() { return cValuesAssignment_2_0; }
		
		//SimpleValue
		public RuleCall getValuesSimpleValueParserRuleCall_2_0_0() { return cValuesSimpleValueParserRuleCall_2_0_0; }
		
		//(',' values += SimpleValue)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//values += SimpleValue
		public Assignment getValuesAssignment_2_1_1() { return cValuesAssignment_2_1_1; }
		
		//SimpleValue
		public RuleCall getValuesSimpleValueParserRuleCall_2_1_1_0() { return cValuesSimpleValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SetValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.SetValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSetValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValuesSimpleValueParserRuleCall_2_0_0 = (RuleCall)cValuesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValuesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuesSimpleValueParserRuleCall_2_1_1_0 = (RuleCall)cValuesAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SetValue:
		//    {SetValue} '{' (values += SimpleValue (',' values += SimpleValue)*)? '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SetValue} '{' (values += SimpleValue (',' values += SimpleValue)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SetValue}
		public Action getSetValueAction_0() { return cSetValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(values += SimpleValue (',' values += SimpleValue)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//values += SimpleValue
		public Assignment getValuesAssignment_2_0() { return cValuesAssignment_2_0; }
		
		//SimpleValue
		public RuleCall getValuesSimpleValueParserRuleCall_2_0_0() { return cValuesSimpleValueParserRuleCall_2_0_0; }
		
		//(',' values += SimpleValue)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//values += SimpleValue
		public Assignment getValuesAssignment_2_1_1() { return cValuesAssignment_2_1_1; }
		
		//SimpleValue
		public RuleCall getValuesSimpleValueParserRuleCall_2_1_1_0() { return cValuesSimpleValueParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringValue:
		//    value = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class IntValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.IntValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntValue:
		//    value = INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = INT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}
	public class TRUEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.TRUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cYesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//TRUE: ('true' | 'yes');
		@Override public ParserRule getRule() { return rule; }
		
		//('true' | 'yes')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'yes'
		public Keyword getYesKeyword_1() { return cYesKeyword_1; }
	}
	public class FALSEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.FALSE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cFalseKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNoKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//FALSE: ('false' | 'no');
		@Override public ParserRule getRule() { return rule; }
		
		//('false' | 'no')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'false'
		public Keyword getFalseKeyword_0() { return cFalseKeyword_0; }
		
		//'no'
		public Keyword getNoKeyword_1() { return cNoKeyword_1; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final RuleCall cValueTRUEParserRuleCall_0_0 = (RuleCall)cValueAlternatives_0.eContents().get(0);
		private final RuleCall cValueFALSEParserRuleCall_0_1 = (RuleCall)cValueAlternatives_0.eContents().get(1);
		
		//BooleanValue:
		//    value = (TRUE | FALSE)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = (TRUE | FALSE)
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//(TRUE | FALSE)
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }
		
		//TRUE
		public RuleCall getValueTRUEParserRuleCall_0_0() { return cValueTRUEParserRuleCall_0_0; }
		
		//FALSE
		public RuleCall getValueFALSEParserRuleCall_0_1() { return cValueFALSEParserRuleCall_0_1; }
	}
	public class ActionPhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ActionPhrase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVerbActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVerifyActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActionPhrase: VerbAction | VerifyAction;
		@Override public ParserRule getRule() { return rule; }
		
		//VerbAction | VerifyAction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VerbAction
		public RuleCall getVerbActionParserRuleCall_0() { return cVerbActionParserRuleCall_0; }
		
		//VerifyAction
		public RuleCall getVerifyActionParserRuleCall_1() { return cVerifyActionParserRuleCall_1; }
	}
	public class VerbActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.VerbAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cActionActionRefParserRuleCall_0_0 = (RuleCall)cActionAssignment_0.eContents().get(0);
		private final Keyword cAndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cOnKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cWORDParserRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cWORDParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cForKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Keyword cTheKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Keyword cTheKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Keyword cOnKeyword_5_2 = (Keyword)cAlternatives_5.eContents().get(2);
		private final Assignment cEntityAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEntityEntityDefParserRuleCall_6_0 = (RuleCall)cEntityAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Keyword cOnKeyword_7_0 = (Keyword)cAlternatives_7.eContents().get(0);
		private final Keyword cOffKeyword_7_1 = (Keyword)cAlternatives_7.eContents().get(1);
		private final Keyword cInKeyword_7_2 = (Keyword)cAlternatives_7.eContents().get(2);
		private final Assignment cEntityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cEntityEntityRefParserRuleCall_8_0 = (RuleCall)cEntityAssignment_8.eContents().get(0);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Keyword cOnKeyword_9_0 = (Keyword)cAlternatives_9.eContents().get(0);
		private final Keyword cOffKeyword_9_1 = (Keyword)cAlternatives_9.eContents().get(1);
		private final Keyword cInKeyword_9_2 = (Keyword)cAlternatives_9.eContents().get(2);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Keyword cOfKeyword_10_0 = (Keyword)cAlternatives_10.eContents().get(0);
		private final Keyword cForKeyword_10_1 = (Keyword)cAlternatives_10.eContents().get(1);
		private final Group cGroup_10_2 = (Group)cAlternatives_10.eContents().get(2);
		private final Keyword cForKeyword_10_2_0 = (Keyword)cGroup_10_2.eContents().get(0);
		private final Keyword cTheKeyword_10_2_1 = (Keyword)cGroup_10_2.eContents().get(1);
		private final Group cGroup_10_3 = (Group)cAlternatives_10.eContents().get(3);
		private final Keyword cOfKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Keyword cTheKeyword_10_3_1 = (Keyword)cGroup_10_3.eContents().get(1);
		private final RuleCall cPREPParserRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cEntityAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cEntityEntityRefParserRuleCall_12_0 = (RuleCall)cEntityAssignment_12.eContents().get(0);
		
		//VerbAction:
		//    action = ActionRef 'and'? WORD? 'on'? (WORD'-'WORD)? ('for' 'the'| 'the'|'on')? (entity = EntityDef)? ('on'|'off'|'in')? entity = EntityRef ('on'|'off'|'in')? ('of'|'for'|'for' 'the'|'of' 'the')? PREP? entity = EntityRef?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//action = ActionRef 'and'? WORD? 'on'? (WORD'-'WORD)? ('for' 'the'| 'the'|'on')? (entity = EntityDef)? ('on'|'off'|'in')? entity = EntityRef ('on'|'off'|'in')? ('of'|'for'|'for' 'the'|'of' 'the')? PREP? entity = EntityRef?
		public Group getGroup() { return cGroup; }
		
		//action = ActionRef
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }
		
		//ActionRef
		public RuleCall getActionActionRefParserRuleCall_0_0() { return cActionActionRefParserRuleCall_0_0; }
		
		//'and'?
		public Keyword getAndKeyword_1() { return cAndKeyword_1; }
		
		//WORD?
		public RuleCall getWORDParserRuleCall_2() { return cWORDParserRuleCall_2; }
		
		//'on'?
		public Keyword getOnKeyword_3() { return cOnKeyword_3; }
		
		//(WORD'-'WORD)?
		public Group getGroup_4() { return cGroup_4; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_4_0() { return cWORDParserRuleCall_4_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//WORD
		public RuleCall getWORDParserRuleCall_4_2() { return cWORDParserRuleCall_4_2; }
		
		//('for' 'the'| 'the'|'on')?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//'for' 'the'
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'for'
		public Keyword getForKeyword_5_0_0() { return cForKeyword_5_0_0; }
		
		//'the'
		public Keyword getTheKeyword_5_0_1() { return cTheKeyword_5_0_1; }
		
		//'the'
		public Keyword getTheKeyword_5_1() { return cTheKeyword_5_1; }
		
		//'on'
		public Keyword getOnKeyword_5_2() { return cOnKeyword_5_2; }
		
		//(entity = EntityDef)?
		public Assignment getEntityAssignment_6() { return cEntityAssignment_6; }
		
		//EntityDef
		public RuleCall getEntityEntityDefParserRuleCall_6_0() { return cEntityEntityDefParserRuleCall_6_0; }
		
		//('on'|'off'|'in')?
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//'on'
		public Keyword getOnKeyword_7_0() { return cOnKeyword_7_0; }
		
		//'off'
		public Keyword getOffKeyword_7_1() { return cOffKeyword_7_1; }
		
		//'in'
		public Keyword getInKeyword_7_2() { return cInKeyword_7_2; }
		
		//entity = EntityRef
		public Assignment getEntityAssignment_8() { return cEntityAssignment_8; }
		
		//EntityRef
		public RuleCall getEntityEntityRefParserRuleCall_8_0() { return cEntityEntityRefParserRuleCall_8_0; }
		
		//('on'|'off'|'in')?
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//'on'
		public Keyword getOnKeyword_9_0() { return cOnKeyword_9_0; }
		
		//'off'
		public Keyword getOffKeyword_9_1() { return cOffKeyword_9_1; }
		
		//'in'
		public Keyword getInKeyword_9_2() { return cInKeyword_9_2; }
		
		//('of'|'for'|'for' 'the'|'of' 'the')?
		public Alternatives getAlternatives_10() { return cAlternatives_10; }
		
		//'of'
		public Keyword getOfKeyword_10_0() { return cOfKeyword_10_0; }
		
		//'for'
		public Keyword getForKeyword_10_1() { return cForKeyword_10_1; }
		
		//'for' 'the'
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//'for'
		public Keyword getForKeyword_10_2_0() { return cForKeyword_10_2_0; }
		
		//'the'
		public Keyword getTheKeyword_10_2_1() { return cTheKeyword_10_2_1; }
		
		//'of' 'the'
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//'of'
		public Keyword getOfKeyword_10_3_0() { return cOfKeyword_10_3_0; }
		
		//'the'
		public Keyword getTheKeyword_10_3_1() { return cTheKeyword_10_3_1; }
		
		//PREP?
		public RuleCall getPREPParserRuleCall_11() { return cPREPParserRuleCall_11; }
		
		//entity = EntityRef?
		public Assignment getEntityAssignment_12() { return cEntityAssignment_12; }
		
		//EntityRef
		public RuleCall getEntityEntityRefParserRuleCall_12_0() { return cEntityEntityRefParserRuleCall_12_0; }
	}
	public class ActionRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.ActionRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVerbAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cVerbActionDefCrossReference_0_0 = (CrossReference)cVerbAssignment_0.eContents().get(0);
		private final RuleCall cVerbActionDefWORDParserRuleCall_0_0_1 = (RuleCall)cVerbActionDefCrossReference_0_0.eContents().get(1);
		private final Keyword cOnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgumentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgumentPropertyValueParserRuleCall_2_0 = (RuleCall)cArgumentAssignment_2.eContents().get(0);
		private final Assignment cPrepositionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrepositionPREPParserRuleCall_3_0 = (RuleCall)cPrepositionAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cTheKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cOnKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Assignment cEntityAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEntityEntityDefParserRuleCall_4_1_0 = (RuleCall)cEntityAssignment_4_1.eContents().get(0);
		
		//ActionRef: verb = [ActionDef | WORD] 'on'? (argument = PropertyValue)? (preposition = PREP)? (('the'|'on')(entity = EntityDef))? ;
		@Override public ParserRule getRule() { return rule; }
		
		//verb = [ActionDef | WORD] 'on'? (argument = PropertyValue)? (preposition = PREP)? (('the'|'on')(entity = EntityDef))?
		public Group getGroup() { return cGroup; }
		
		//verb = [ActionDef | WORD]
		public Assignment getVerbAssignment_0() { return cVerbAssignment_0; }
		
		//[ActionDef | WORD]
		public CrossReference getVerbActionDefCrossReference_0_0() { return cVerbActionDefCrossReference_0_0; }
		
		//WORD
		public RuleCall getVerbActionDefWORDParserRuleCall_0_0_1() { return cVerbActionDefWORDParserRuleCall_0_0_1; }
		
		//'on'?
		public Keyword getOnKeyword_1() { return cOnKeyword_1; }
		
		//(argument = PropertyValue)?
		public Assignment getArgumentAssignment_2() { return cArgumentAssignment_2; }
		
		//PropertyValue
		public RuleCall getArgumentPropertyValueParserRuleCall_2_0() { return cArgumentPropertyValueParserRuleCall_2_0; }
		
		//(preposition = PREP)?
		public Assignment getPrepositionAssignment_3() { return cPrepositionAssignment_3; }
		
		//PREP
		public RuleCall getPrepositionPREPParserRuleCall_3_0() { return cPrepositionPREPParserRuleCall_3_0; }
		
		//(('the'|'on')(entity = EntityDef))?
		public Group getGroup_4() { return cGroup_4; }
		
		//('the'|'on')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'the'
		public Keyword getTheKeyword_4_0_0() { return cTheKeyword_4_0_0; }
		
		//'on'
		public Keyword getOnKeyword_4_0_1() { return cOnKeyword_4_0_1; }
		
		//(entity = EntityDef)
		public Assignment getEntityAssignment_4_1() { return cEntityAssignment_4_1; }
		
		//EntityDef
		public RuleCall getEntityEntityDefParserRuleCall_4_1_0() { return cEntityEntityDefParserRuleCall_4_1_0; }
	}
	public class VerifyActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.bdd.BddDsl.VerifyAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStateStatePhraseParserRuleCall_1_0 = (RuleCall)cStateAssignment_1.eContents().get(0);
		
		//VerifyAction:
		//    'assure' state = StatePhrase
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'assure' state = StatePhrase
		public Group getGroup() { return cGroup; }
		
		//'assure'
		public Keyword getAssureKeyword_0() { return cAssureKeyword_0; }
		
		//state = StatePhrase
		public Assignment getStateAssignment_1() { return cStateAssignment_1; }
		
		//StatePhrase
		public RuleCall getStateStatePhraseParserRuleCall_1_0() { return cStateStatePhraseParserRuleCall_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final ModelRefElements pModelRef;
	private final EntityDefElements pEntityDef;
	private final ActionDefElements pActionDef;
	private final PREPElements pPREP;
	private final WORDElements pWORD;
	private final StateDefElements pStateDef;
	private final StateNameElements pStateName;
	private final PropertyDefElements pPropertyDef;
	private final ID_OR_STRINGElements pID_OR_STRING;
	private final ScenarioElements pScenario;
	private final ScenarioStateElements pScenarioState;
	private final ScenarioActionElements pScenarioAction;
	private final StatePhraseElements pStatePhrase;
	private final ScenarioRefElements pScenarioRef;
	private final ENTITY_IDENTITYElements pENTITY_IDENTITY;
	private final OPTIONElements pOPTION;
	private final EntityRefElements pEntityRef;
	private final EntityStatePhraseElements pEntityStatePhrase;
	private final EntityPropertyStatePhraseElements pEntityPropertyStatePhrase;
	private final PropertyValueElements pPropertyValue;
	private final SimpleValueElements pSimpleValue;
	private final ListValueElements pListValue;
	private final SetValueElements pSetValue;
	private final StringValueElements pStringValue;
	private final IntValueElements pIntValue;
	private final TRUEElements pTRUE;
	private final FALSEElements pFALSE;
	private final BooleanValueElements pBooleanValue;
	private final ActionPhraseElements pActionPhrase;
	private final VerbActionElements pVerbAction;
	private final ActionRefElements pActionRef;
	private final VerifyActionElements pVerifyAction;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BddDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pModelRef = new ModelRefElements();
		this.pEntityDef = new EntityDefElements();
		this.pActionDef = new ActionDefElements();
		this.pPREP = new PREPElements();
		this.pWORD = new WORDElements();
		this.pStateDef = new StateDefElements();
		this.pStateName = new StateNameElements();
		this.pPropertyDef = new PropertyDefElements();
		this.pID_OR_STRING = new ID_OR_STRINGElements();
		this.pScenario = new ScenarioElements();
		this.pScenarioState = new ScenarioStateElements();
		this.pScenarioAction = new ScenarioActionElements();
		this.pStatePhrase = new StatePhraseElements();
		this.pScenarioRef = new ScenarioRefElements();
		this.pENTITY_IDENTITY = new ENTITY_IDENTITYElements();
		this.pOPTION = new OPTIONElements();
		this.pEntityRef = new EntityRefElements();
		this.pEntityStatePhrase = new EntityStatePhraseElements();
		this.pEntityPropertyStatePhrase = new EntityPropertyStatePhraseElements();
		this.pPropertyValue = new PropertyValueElements();
		this.pSimpleValue = new SimpleValueElements();
		this.pListValue = new ListValueElements();
		this.pSetValue = new SetValueElements();
		this.pStringValue = new StringValueElements();
		this.pIntValue = new IntValueElements();
		this.pTRUE = new TRUEElements();
		this.pFALSE = new FALSEElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pActionPhrase = new ActionPhraseElements();
		this.pVerbAction = new VerbActionElements();
		this.pActionRef = new ActionRefElements();
		this.pVerifyAction = new VerifyActionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("no.hal.bdd.BddDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    ('model' name = ID)
	//    (
	//        (modelRefs += ModelRef) |
	//        (entityDefs += EntityDef) |
	//        (scenarios += Scenario)
	//    )*
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//ModelRef:
	//    'using' modelRef = [Model]
	//;
	public ModelRefElements getModelRefAccess() {
		return pModelRef;
	}
	
	public ParserRule getModelRefRule() {
		return getModelRefAccess().getRule();
	}
	
	//EntityDef:
	//    'entity' name = (ID | STRING) ('-'WORD)? ('is' superEntities += [EntityDef] (',' superEntities += [EntityDef])*)? '{'
	//        ('actions:' (actions += ActionDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') actions += ActionDef)*)?
	//        ('states:' (states += StateDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') states += StateDef)*)?
	//        ('properties:' (properties += PropertyDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') properties += PropertyDef)*)?
	//    '}'
	//;
	public EntityDefElements getEntityDefAccess() {
		return pEntityDef;
	}
	
	public ParserRule getEntityDefRule() {
		return getEntityDefAccess().getRule();
	}
	
	//ActionDef:
	//    name = WORD ('and'|'the')? (WORD)? (argument = WORD)? ((preposition = PREP)? | (optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?))
	//;
	public ActionDefElements getActionDefAccess() {
		return pActionDef;
	}
	
	public ParserRule getActionDefRule() {
		return getActionDefAccess().getRule();
	}
	
	//PREP: ('on' | 'in' | 'from' | 'to' | 'into'|'for');
	public PREPElements getPREPAccess() {
		return pPREP;
	}
	
	public ParserRule getPREPRule() {
		return getPREPAccess().getRule();
	}
	
	//WORD: ID;
	public WORDElements getWORDAccess() {
		return pWORD;
	}
	
	public ParserRule getWORDRule() {
		return getWORDAccess().getRule();
	}
	
	//StateDef: postive = StateName PREP? ('/' negative = StateName)?;
	public StateDefElements getStateDefAccess() {
		return pStateDef;
	}
	
	public ParserRule getStateDefRule() {
		return getStateDefAccess().getRule();
	}
	
	//StateName: name = (WORD) ('and'|'off')?  (WORD)?;
	public StateNameElements getStateNameAccess() {
		return pStateName;
	}
	
	public ParserRule getStateNameRule() {
		return getStateNameAccess().getRule();
	}
	
	//PropertyDef: name = WORD (plural ?= '*')?;
	public PropertyDefElements getPropertyDefAccess() {
		return pPropertyDef;
	}
	
	public ParserRule getPropertyDefRule() {
		return getPropertyDefAccess().getRule();
	}
	
	////
	//ID_OR_STRING: (ID | STRING);
	public ID_OR_STRINGElements getID_OR_STRINGAccess() {
		return pID_OR_STRING;
	}
	
	public ParserRule getID_OR_STRINGRule() {
		return getID_OR_STRINGAccess().getRule();
	}
	
	//Scenario:
	//       'Scenario:' name = ID_OR_STRING WORD? ('out'|'off'|'on'|'in'|'-'|'the'|'to' 'the'|'to')? WORD? ('off'|'on'|'in'|'-'|'the')? WORD? ('on'|'in'|'-'|'the')? WORD? ('in'|'-'|'the')? WORD?
	//       (((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
	//       'which' 'means')?
	//       (
	//       'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
	//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction
	//       'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
	//       )
	//       (
	//           ((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
	//       'which' 'means')?
	//      ( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
	//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
	//       'Then' ('the'|'all' 'the')? (STRING)? postState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
	//       )?
	//       (((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
	//       'which' 'means')?
	//       ('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
	//       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
	//       'Then' ('the'|'all' 'the')? (STRING)? postState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
	//       )?
	//;
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//ScenarioState:
	//    states += StatePhrase (('And'|'And' 'the') states += StatePhrase)*
	//;
	public ScenarioStateElements getScenarioStateAccess() {
		return pScenarioState;
	}
	
	public ParserRule getScenarioStateRule() {
		return getScenarioStateAccess().getRule();
	}
	
	//ScenarioAction:
	//    actions += ActionPhrase (('And' 'I'|'And') actions += ActionPhrase)*
	//;
	public ScenarioActionElements getScenarioActionAccess() {
		return pScenarioAction;
	}
	
	public ParserRule getScenarioActionRule() {
		return getScenarioActionAccess().getRule();
	}
	
	//StatePhrase: ScenarioRef | EntityPropertyStatePhrase | EntityStatePhrase;
	public StatePhraseElements getStatePhraseAccess() {
		return pStatePhrase;
	}
	
	public ParserRule getStatePhraseRule() {
		return getStatePhraseAccess().getRule();
	}
	
	//ScenarioRef:
	//    scenarioRef = [Scenario | ID_OR_STRING]
	//;
	public ScenarioRefElements getScenarioRefAccess() {
		return pScenarioRef;
	}
	
	public ParserRule getScenarioRefRule() {
		return getScenarioRefAccess().getRule();
	}
	
	////ENTITY_IDENTITY: '#'? (INT | STRING);
	//ENTITY_IDENTITY: '#'? (INT | STRING);
	public ENTITY_IDENTITYElements getENTITY_IDENTITYAccess() {
		return pENTITY_IDENTITY;
	}
	
	public ParserRule getENTITY_IDENTITYRule() {
		return getENTITY_IDENTITYAccess().getRule();
	}
	
	//OPTION:'#'? (INT | STRING) ;
	public OPTIONElements getOPTIONAccess() {
		return pOPTION;
	}
	
	public ParserRule getOPTIONRule() {
		return getOPTIONAccess().getRule();
	}
	
	//EntityRef:
	//     (WORD OPTION 'for' 'the')? ('for'|'of')? (('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY) | (name = ENTITY_IDENTITY)
	//;
	public EntityRefElements getEntityRefAccess() {
		return pEntityRef;
	}
	
	public ParserRule getEntityRefRule() {
		return getEntityRefAccess().getRule();
	}
	
	//EntityStatePhrase:
	//    (property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('for'|'for' 'the')? ('of'|'of' 'the'|'for' 'the'|'for'))?
	//    entity = EntityRef ('is'|'are') 'not'? state = [StateName] WORD?
	//;
	public EntityStatePhraseElements getEntityStatePhraseAccess() {
		return pEntityStatePhrase;
	}
	
	public ParserRule getEntityStatePhraseRule() {
		return getEntityStatePhraseAccess().getRule();
	}
	
	//EntityPropertyStatePhrase:
	//     property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('of'|'for' |'from'|'for' 'the'|'of' 'the')  entity = EntityRef
	//    ((('is'|'is' 'not') value = PropertyValue WORD?) WORD? | (('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?)
	//;
	public EntityPropertyStatePhraseElements getEntityPropertyStatePhraseAccess() {
		return pEntityPropertyStatePhrase;
	}
	
	public ParserRule getEntityPropertyStatePhraseRule() {
		return getEntityPropertyStatePhraseAccess().getRule();
	}
	
	////terminal UNCLOSED_STRING : '"' (!'"')* EOF;
	//PropertyValue: SimpleValue | ListValue | SetValue;
	public PropertyValueElements getPropertyValueAccess() {
		return pPropertyValue;
	}
	
	public ParserRule getPropertyValueRule() {
		return getPropertyValueAccess().getRule();
	}
	
	//SimpleValue: IntValue | BooleanValue | StringValue;
	public SimpleValueElements getSimpleValueAccess() {
		return pSimpleValue;
	}
	
	public ParserRule getSimpleValueRule() {
		return getSimpleValueAccess().getRule();
	}
	
	//ListValue:
	//    {ListValue} '[' (values += SimpleValue (',' values += SimpleValue)*)? ']'
	//;
	public ListValueElements getListValueAccess() {
		return pListValue;
	}
	
	public ParserRule getListValueRule() {
		return getListValueAccess().getRule();
	}
	
	//SetValue:
	//    {SetValue} '{' (values += SimpleValue (',' values += SimpleValue)*)? '}'
	//;
	public SetValueElements getSetValueAccess() {
		return pSetValue;
	}
	
	public ParserRule getSetValueRule() {
		return getSetValueAccess().getRule();
	}
	
	//StringValue:
	//    value = STRING
	//;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	//IntValue:
	//    value = INT
	//;
	public IntValueElements getIntValueAccess() {
		return pIntValue;
	}
	
	public ParserRule getIntValueRule() {
		return getIntValueAccess().getRule();
	}
	
	//TRUE: ('true' | 'yes');
	public TRUEElements getTRUEAccess() {
		return pTRUE;
	}
	
	public ParserRule getTRUERule() {
		return getTRUEAccess().getRule();
	}
	
	//FALSE: ('false' | 'no');
	public FALSEElements getFALSEAccess() {
		return pFALSE;
	}
	
	public ParserRule getFALSERule() {
		return getFALSEAccess().getRule();
	}
	
	//BooleanValue:
	//    value = (TRUE | FALSE)
	//;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//ActionPhrase: VerbAction | VerifyAction;
	public ActionPhraseElements getActionPhraseAccess() {
		return pActionPhrase;
	}
	
	public ParserRule getActionPhraseRule() {
		return getActionPhraseAccess().getRule();
	}
	
	//VerbAction:
	//    action = ActionRef 'and'? WORD? 'on'? (WORD'-'WORD)? ('for' 'the'| 'the'|'on')? (entity = EntityDef)? ('on'|'off'|'in')? entity = EntityRef ('on'|'off'|'in')? ('of'|'for'|'for' 'the'|'of' 'the')? PREP? entity = EntityRef?
	//;
	public VerbActionElements getVerbActionAccess() {
		return pVerbAction;
	}
	
	public ParserRule getVerbActionRule() {
		return getVerbActionAccess().getRule();
	}
	
	//ActionRef: verb = [ActionDef | WORD] 'on'? (argument = PropertyValue)? (preposition = PREP)? (('the'|'on')(entity = EntityDef))? ;
	public ActionRefElements getActionRefAccess() {
		return pActionRef;
	}
	
	public ParserRule getActionRefRule() {
		return getActionRefAccess().getRule();
	}
	
	//VerifyAction:
	//    'assure' state = StatePhrase
	//;
	public VerifyActionElements getVerifyActionAccess() {
		return pVerifyAction;
	}
	
	public ParserRule getVerifyActionRule() {
		return getVerifyActionAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
